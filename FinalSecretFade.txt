using System;
using UnityEngine;

// Token: 0x0200043B RID: 1083
public class FinalSecretFade : MonoBehaviour, IPreAwake
{
	// Token: 0x06001C55 RID: 7253 RVA: 0x000F7F6C File Offset: 0x000F616C
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		AkGameObj akGameObj = AudioUtils.EnsureAkGameObj(base.gameObject, this);
		this.audioFadeOut = new AudioEventSimpleLocal("amb_sws_farm_fields_secretSecret_fadeout", akGameObj);
	}

	// Token: 0x06001C56 RID: 7254 RVA: 0x000F7FAC File Offset: 0x000F61AC
	public bool PreAwake(int callcount)
	{
		this.fade = SignalIn.Create("fade", base.gameObject, new Action(this.OnFade));
		return true;
	}

	// Token: 0x06001C57 RID: 7255 RVA: 0x000F7FD4 File Offset: 0x000F61D4
	private void OnFade()
	{
		if (this.waitDuration > 0f)
		{
			this.SetWaitState();
		}
		else
		{
			this.SetFadeState();
		}
	}

	// Token: 0x06001C58 RID: 7256 RVA: 0x000F7FF8 File Offset: 0x000F61F8
	private void Awake()
	{
		this.OnPreProcess();
	}

	// Token: 0x06001C59 RID: 7257 RVA: 0x000F8000 File Offset: 0x000F6200
	private void Start()
	{
	}

	// Token: 0x06001C5A RID: 7258 RVA: 0x000F8004 File Offset: 0x000F6204
	private void OnDisable()
	{
	}

	// Token: 0x06001C5B RID: 7259 RVA: 0x000F8008 File Offset: 0x000F6208
	private void SetWaitState()
	{
		this.waitTimer = this.waitDuration;
		this.state = FinalSecretFade.State.Wait;
	}

	// Token: 0x06001C5C RID: 7260 RVA: 0x000F8020 File Offset: 0x000F6220
	private void WaitState()
	{
		this.waitTimer -= Time.deltaTime;
		if (this.waitTimer <= 0f)
		{
			this.SetFadeState();
		}
	}

	// Token: 0x06001C5D RID: 7261 RVA: 0x000F8058 File Offset: 0x000F6258
	private void SetFadeState()
	{
		User.Achievement.Acquire(AchievementPlatform.EAchievements.PowerSecret);
		User.Achievement.ResetProgression();
		PersistentBehaviour<GameManager>.instance.fader.StartFade(0f, 1f, this.fadeDuration);
		this.state = FinalSecretFade.State.Fade;
	}

	// Token: 0x06001C5E RID: 7262 RVA: 0x000F80A4 File Offset: 0x000F62A4
	private void FadeState()
	{
		if (PersistentBehaviour<GameManager>.instance.fader.IsDone)
		{
			this.SetFadeCompleteState();
		}
	}

	// Token: 0x06001C5F RID: 7263 RVA: 0x000F80C0 File Offset: 0x000F62C0
	private void SetFadeCompleteState()
	{
		this.autoRestartTimer = this.autoRestartDuration;
		this.state = FinalSecretFade.State.FadeComplete;
	}

	// Token: 0x06001C60 RID: 7264 RVA: 0x000F80D8 File Offset: 0x000F62D8
	private void FadeCompleteState()
	{
		this.autoRestartTimer -= Time.deltaTime;
		BoyInput input = ScriptGlobals.boy.input;
		if (input.action || input.jump || this.autoRestartTimer <= 0f)
		{
			this.SetAudioFadeState();
		}
	}

	// Token: 0x06001C61 RID: 7265 RVA: 0x000F8130 File Offset: 0x000F6330
	private void SetAudioFadeState()
	{
		this.audioFadeOut.PostFast();
		this.audioFadeTimer = this.audioFadeDuration;
		this.state = FinalSecretFade.State.AudioFade;
	}

	// Token: 0x06001C62 RID: 7266 RVA: 0x000F8154 File Offset: 0x000F6354
	private void AudioFadState()
	{
		this.audioFadeTimer -= Time.deltaTime;
		if (this.audioFadeTimer <= 0f)
		{
			GameEventManager.StartNewGame();
			this.state = FinalSecretFade.State.Complete;
		}
	}

	// Token: 0x06001C63 RID: 7267 RVA: 0x000F8190 File Offset: 0x000F6390
	private void Update()
	{
		switch (this.state)
		{
		case FinalSecretFade.State.Wait:
			this.WaitState();
			break;
		case FinalSecretFade.State.Fade:
			this.FadeState();
			break;
		case FinalSecretFade.State.FadeComplete:
			this.FadeCompleteState();
			break;
		case FinalSecretFade.State.AudioFade:
			this.AudioFadState();
			break;
		}
	}

	// Token: 0x040033FC RID: 13308
	public float waitDuration = 5f;

	// Token: 0x040033FD RID: 13309
	public float fadeDuration = 5f;

	// Token: 0x040033FE RID: 13310
	public float autoRestartDuration = 15f;

	// Token: 0x040033FF RID: 13311
	public float audioFadeDuration = 3f;

	// Token: 0x04003400 RID: 13312
	public bool restart = true;

	// Token: 0x04003401 RID: 13313
	private SignalIn fade;

	// Token: 0x04003402 RID: 13314
	private FinalSecretFade.State state;

	// Token: 0x04003403 RID: 13315
	private float waitTimer;

	// Token: 0x04003404 RID: 13316
	private float autoRestartTimer;

	// Token: 0x04003405 RID: 13317
	private float audioFadeTimer;

	// Token: 0x04003406 RID: 13318
	[HideInInspector]
	[SerializeField]
	private AudioEventSimpleLocal audioFadeOut;

	// Token: 0x04003407 RID: 13319
	[HideInInspector]
	[SerializeField]
	private bool preProcessed;

	// Token: 0x0200043C RID: 1084
	private enum State
	{
		// Token: 0x04003409 RID: 13321
		None,
		// Token: 0x0400340A RID: 13322
		Wait,
		// Token: 0x0400340B RID: 13323
		Fade,
		// Token: 0x0400340C RID: 13324
		FadeComplete,
		// Token: 0x0400340D RID: 13325
		AudioFade,
		// Token: 0x0400340E RID: 13326
		Complete
	}
}
