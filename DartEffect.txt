using System;
using UnityEngine;

// Token: 0x02000195 RID: 405
public class DartEffect : MonoBehaviour
{
	// Token: 0x06000BE0 RID: 3040 RVA: 0x00074A18 File Offset: 0x00072C18
	public void SetupWaterQueue(WaterQueueMaster waterQueueMaster)
	{
		WaterToShader[] componentsInChildren = base.GetComponentsInChildren<WaterToShader>(true);
		int i = 0;
		int num = componentsInChildren.Length;
		while (i < num)
		{
			WaterToShader waterToShader = componentsInChildren[i];
			waterToShader.SetWaterQueueMaster(waterQueueMaster);
			i++;
		}
		base.gameObject.SetActive(false);
	}

	// Token: 0x06000BE1 RID: 3041 RVA: 0x00074A5C File Offset: 0x00072C5C
	public void Place(Vector3 target, Vector3 gunPos, Vector3 waterPos)
	{
		Rigidbody component = this.visuals.GetComponent<Rigidbody>();
		bool flag = this.anim && this.animImpacts.Length > 0;
		this.visuals.position = target;
		if (flag)
		{
			Vector3 vector = gunPos;
			vector.y = target.y;
			this.visuals.forward = vector - target;
			this.visuals.Rotate(0f, (float)Random.Range(-10, 10), 0f, 0);
		}
		else
		{
			this.visuals.forward = target - gunPos;
		}
		Vector3 vector2 = gunPos - target;
		this.dartFx.position = target;
		this.dartFx.forward = -vector2;
		this.gunFx.position = gunPos;
		this.gunFx.forward = vector2;
		if (this.waterFx)
		{
			this.waterFx.position = waterPos;
		}
		base.gameObject.SetActive(true);
		if (component)
		{
			component.AddForce(this.visuals.forward * this.forceFactor, 1);
			Vector3 vector3;
			vector3..ctor(Random.Range(20f, 40f) * Mathf.Sign((float)Random.Range(-1, 1)), Random.Range(20f, 40f) * Mathf.Sign((float)Random.Range(-1, 1)), Random.Range(40f, 80f) * Mathf.Sign((float)Random.Range(-1, 1)));
			component.AddTorque(vector3);
		}
		if (flag)
		{
			int num = Random.Range(0, this.animImpacts.Length);
			AnimationClip animationClip = this.animImpacts[num];
			this.anim.Play(animationClip.name);
		}
	}

	// Token: 0x040014C7 RID: 5319
	public Transform visuals;

	// Token: 0x040014C8 RID: 5320
	public Transform dartFx;

	// Token: 0x040014C9 RID: 5321
	public Transform gunFx;

	// Token: 0x040014CA RID: 5322
	public Transform waterFx;

	// Token: 0x040014CB RID: 5323
	public Animation anim;

	// Token: 0x040014CC RID: 5324
	public AnimationClip[] animImpacts;

	// Token: 0x040014CD RID: 5325
	public float forceFactor;

	// Token: 0x040014CE RID: 5326
	public AkGameObj akGameObj;
}