using System;
using UnityEngine;

// Token: 0x02000607 RID: 1543
public class TestLog
{
	// Token: 0x060026A0 RID: 9888 RVA: 0x00138A94 File Offset: 0x00136C94
	[Tester.TestAttribute("Do some stuff.")]
	public bool DoStuff()
	{
		LogManager.logEntryReceived += delegate(LogEntry e, Object c)
		{
			Debug.Log(e, c);
		};
		return true;
	}

	// Token: 0x060026A1 RID: 9889 RVA: 0x00138ABC File Offset: 0x00136CBC
	[Tester.TestAttribute("Add 4000 log entries.")]
	public bool AddLogEntries()
	{
		for (int i = 0; i < 1000; i++)
		{
		}
		return true;
	}

	// Token: 0x060026A2 RID: 9890 RVA: 0x00138AE0 File Offset: 0x00136CE0
	[Tester.TestAttribute("Test circular buffer")]
	public bool TestCircularBuffer()
	{
		CircularBuffer<int> circularBuffer = new CircularBuffer<int>(0);
		if (circularBuffer.Add(7))
		{
			return false;
		}
		if (circularBuffer.count != 0)
		{
			return false;
		}
		if (circularBuffer.capacity != 0)
		{
			return false;
		}
		circularBuffer = new CircularBuffer<int>(1);
		if (!circularBuffer.Add(7))
		{
			return false;
		}
		if (circularBuffer.Add(5))
		{
			return false;
		}
		if (circularBuffer.count != 1)
		{
			return false;
		}
		if (circularBuffer.capacity != 1)
		{
			return false;
		}
		circularBuffer.Remove();
		if (circularBuffer.count != 0)
		{
			return false;
		}
		if (circularBuffer.capacity != 1)
		{
			return false;
		}
		if (!circularBuffer.Add(65))
		{
			return false;
		}
		circularBuffer = new CircularBuffer<int>(3);
		if (!circularBuffer.Add(1))
		{
			return false;
		}
		if (!circularBuffer.Add(2))
		{
			return false;
		}
		circularBuffer.Remove();
		if (circularBuffer[0] != 2)
		{
			return false;
		}
		if (!circularBuffer.Add(3))
		{
			return false;
		}
		if (!circularBuffer.Add(4))
		{
			return false;
		}
		if (circularBuffer[0] != 2)
		{
			return false;
		}
		circularBuffer.Remove();
		circularBuffer.Remove();
		return circularBuffer[0] == 4;
	}

	// Token: 0x170000B0 RID: 176
	// (get) Token: 0x060026A3 RID: 9891 RVA: 0x00138C0C File Offset: 0x00136E0C
	[Tester.TestAttribute("This is a property.")]
	public int MessageID
	{
		get
		{
			return TestLog.messageID;
		}
	}

	// Token: 0x040045EE RID: 17902
	private static int messageID;
}
