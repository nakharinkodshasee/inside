using System;
using UnityEngine;

// Token: 0x02000225 RID: 549
public class SecretTape : MonoBehaviour
{
	// Token: 0x060010FC RID: 4348 RVA: 0x0009FE94 File Offset: 0x0009E094
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		AkGameObj akGameObj = AudioUtils.EnsureAkGameObj(base.gameObject, null);
		this.audioLeft = new AudioEventSimpleLocal(this.audioPrefix + "_" + this.leftEvent, akGameObj);
		this.audioRight = new AudioEventSimpleLocal(this.audioPrefix + "_" + this.rightEvent, akGameObj);
		this.audioUp = new AudioEventSimpleLocal(this.audioPrefix + "_" + this.upEvent, akGameObj);
		Vector3 position = base.transform.position;
		this.x = position.x;
		this.y = position.y;
	}

	// Token: 0x060010FD RID: 4349 RVA: 0x0009FF50 File Offset: 0x0009E150
	private void Start()
	{
		this.curTime = this.timeBetweenEvents;
		this.OnPreProcess();
	}

	// Token: 0x060010FE RID: 4350 RVA: 0x0009FF64 File Offset: 0x0009E164
	private void Update()
	{
		if (this.password.Length < 1)
		{
			return;
		}
		Boy boy = ScriptGlobals.boy;
		if (boy == null)
		{
			return;
		}
		this.curTime -= Time.deltaTime;
		if (this.curTime <= 0f)
		{
			SecretTape.PullDir pullDir = this.password[this.curIndex];
			vector2f pos = boy.pos;
			float num = pos.x - this.x;
			float num2 = pos.y - this.y;
			float num3 = num * num + num2 * num2;
			bool flag = num3 <= 625f;
			if (flag)
			{
				if (pullDir == SecretTape.PullDir.Left)
				{
					this.audioLeft.PostFast();
				}
				else if (pullDir == SecretTape.PullDir.Right)
				{
					this.audioRight.PostFast();
				}
				else if (pullDir == SecretTape.PullDir.Up)
				{
					this.audioUp.PostFast();
				}
			}
			this.curTime = this.timeBetweenEvents;
			this.curIndex = (this.curIndex + 1) % this.password.Length;
		}
	}

	// Token: 0x04001ED0 RID: 7888
	private const float maxDistance = 25f;

	// Token: 0x04001ED1 RID: 7889
	private const float maxDistanceSqrd = 625f;

	// Token: 0x04001ED2 RID: 7890
	public float timeBetweenEvents = 1f;

	// Token: 0x04001ED3 RID: 7891
	public string upEvent;

	// Token: 0x04001ED4 RID: 7892
	public string leftEvent;

	// Token: 0x04001ED5 RID: 7893
	public string rightEvent;

	// Token: 0x04001ED6 RID: 7894
	public SecretTape.PullDir[] password = new SecretTape.PullDir[]
	{
		SecretTape.PullDir.Left,
		SecretTape.PullDir.Left,
		SecretTape.PullDir.Up,
		SecretTape.PullDir.Right
	};

	// Token: 0x04001ED7 RID: 7895
	public string audioPrefix;

	// Token: 0x04001ED8 RID: 7896
	private int curIndex;

	// Token: 0x04001ED9 RID: 7897
	private float curTime;

	// Token: 0x04001EDA RID: 7898
	[HideInInspector]
	[SerializeField]
	private AudioEventSimpleLocal audioLeft;

	// Token: 0x04001EDB RID: 7899
	[HideInInspector]
	[SerializeField]
	private AudioEventSimpleLocal audioRight;

	// Token: 0x04001EDC RID: 7900
	[HideInInspector]
	[SerializeField]
	private AudioEventSimpleLocal audioUp;

	// Token: 0x04001EDD RID: 7901
	[SerializeField]
	[HideInInspector]
	private bool preProcessed;

	// Token: 0x04001EDE RID: 7902
	[SerializeField]
	[HideInInspector]
	private float x;

	// Token: 0x04001EDF RID: 7903
	[HideInInspector]
	[SerializeField]
	private float y;

	// Token: 0x02000226 RID: 550
	public enum PullDir
	{
		// Token: 0x04001EE1 RID: 7905
		None,
		// Token: 0x04001EE2 RID: 7906
		Up,
		// Token: 0x04001EE3 RID: 7907
		Left,
		// Token: 0x04001EE4 RID: 7908
		Right
	}
}