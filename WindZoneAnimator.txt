using System;
using UnityEngine;

// Token: 0x0200037E RID: 894
public class WindZoneAnimator : MonoBehaviour
{
	// Token: 0x06001849 RID: 6217 RVA: 0x000D4328 File Offset: 0x000D2528
	private void Update()
	{
		if (!this.windZone || !this.particles || (!this.animateRadius && !this.animateWindMain))
		{
			return;
		}
		float num = Mathf.Clamp01(this.particles.time / this.duration);
		if (this.animateRadius)
		{
			this.windZone.radius = this.radiusCurve.Evaluate(num) * this.radiusMultiplier;
		}
		if (this.animateWindMain)
		{
			this.windZone.windMain = this.windMainCurve.Evaluate(num) * this.windMainMultiplier;
		}
	}

	// Token: 0x04002BDF RID: 11231
	public WindZone windZone;

	// Token: 0x04002BE0 RID: 11232
	public ParticleSystem particles;

	// Token: 0x04002BE1 RID: 11233
	public float duration;

	// Token: 0x04002BE2 RID: 11234
	public bool animateRadius = true;

	// Token: 0x04002BE3 RID: 11235
	public float radiusMultiplier = 1f;

	// Token: 0x04002BE4 RID: 11236
	public AnimationCurve radiusCurve;

	// Token: 0x04002BE5 RID: 11237
	public bool animateWindMain = true;

	// Token: 0x04002BE6 RID: 11238
	public float windMainMultiplier = 1f;

	// Token: 0x04002BE7 RID: 11239
	public AnimationCurve windMainCurve;
}