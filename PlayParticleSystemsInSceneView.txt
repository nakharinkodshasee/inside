using System;
using System.Collections.Generic;
using System.Linq;
using UnityEngine;

// Token: 0x0200063F RID: 1599
[ExecuteInEditMode]
public class PlayParticleSystemsInSceneView : MonoBehaviour
{
	// Token: 0x0600278B RID: 10123 RVA: 0x0013DF88 File Offset: 0x0013C188
	private void OnEnable()
	{
		if (Application.isPlaying)
		{
			return;
		}
		this.start = Time.realtimeSinceStartup;
		this.ps = (from x in new List<ParticleSystem>(Object.FindObjectsOfType<ParticleSystem>())
		where x.playOnAwake
		select x).ToList<ParticleSystem>();
		this.ps.ForEach(delegate(ParticleSystem x)
		{
			x.Play();
		});
	}

	// Token: 0x0600278C RID: 10124 RVA: 0x0013E00C File Offset: 0x0013C20C
	private void OnDisable()
	{
		if (Application.isPlaying)
		{
			return;
		}
		this.ps.ForEach(delegate(ParticleSystem x)
		{
			x.Stop();
			x.Clear();
		});
	}

	// Token: 0x0600278D RID: 10125 RVA: 0x0013E044 File Offset: 0x0013C244
	private void Update()
	{
		if (Application.isPlaying)
		{
			return;
		}
		this.timer = Time.realtimeSinceStartup - this.start;
		foreach (ParticleSystem particleSystem in this.ps)
		{
			ParticleSystemRenderer component = particleSystem.GetComponent<ParticleSystemRenderer>();
			if (component && component.isVisible)
			{
				float playbackSpeed = particleSystem.playbackSpeed;
				particleSystem.playbackSpeed = 1f;
				particleSystem.Simulate(this.timer * playbackSpeed);
				particleSystem.playbackSpeed = playbackSpeed;
			}
		}
	}

	// Token: 0x04004707 RID: 18183
	private float start;

	// Token: 0x04004708 RID: 18184
	private float timer;

	// Token: 0x04004709 RID: 18185
	private List<ParticleSystem> ps;
}
