using System;
using UnityEngine;

// Token: 0x02000297 RID: 663
public class MoveBetweenRTPC : MonoBehaviour
{
	// Token: 0x06001413 RID: 5139 RVA: 0x000BA05C File Offset: 0x000B825C
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		this.rtpc = new RTPC(this.RtpcName, false);
		if (this.keyObject == AudioKeyObject.Key.This)
		{
			this.akGameObj = AudioUtils.EnsureAkGameObj(base.gameObject, this);
		}
	}

	// Token: 0x06001414 RID: 5140 RVA: 0x000BA0AC File Offset: 0x000B82AC
	private void Awake()
	{
		this.OnPreProcess();
	}

	// Token: 0x06001415 RID: 5141 RVA: 0x000BA0B4 File Offset: 0x000B82B4
	private void Update()
	{
		float magnitude = (this.highObject.position - this.lowObject.position).magnitude;
		float magnitude2 = (this.moveObject.position - this.lowObject.position).magnitude;
		float num = Mathf.InverseLerp(0f, magnitude, magnitude2);
		float num2 = Mathf.Lerp(this.lowRTPC, this.highRTPC, num);
		if (num2 != this.previousRtpc)
		{
			if (this.akGameObj == null)
			{
				this.akGameObj = AudioUtils.EnsureAkGameObjFromAudioKeyObject(this.keyObject, base.gameObject, null, null);
			}
			if (SoundEngine.IsRunning && this.akGameObj)
			{
				this.rtpc.SetFast(num2, this.akGameObj, 0f);
			}
		}
		this.previousRtpc = num2;
	}

	// Token: 0x06001416 RID: 5142 RVA: 0x000BA19C File Offset: 0x000B839C
	private bool AssertCheck()
	{
		return !this.moveObject || !this.lowObject || !this.highObject || this.RtpcName != string.Empty;
	}

	// Token: 0x04002493 RID: 9363
	public AudioKeyObject.Key keyObject;

	// Token: 0x04002494 RID: 9364
	public Transform moveObject;

	// Token: 0x04002495 RID: 9365
	public Transform lowObject;

	// Token: 0x04002496 RID: 9366
	public Transform highObject;

	// Token: 0x04002497 RID: 9367
	public string RtpcName = string.Empty;

	// Token: 0x04002498 RID: 9368
	public float lowRTPC;

	// Token: 0x04002499 RID: 9369
	public float highRTPC = 100f;

	// Token: 0x0400249A RID: 9370
	private float previousRtpc;

	// Token: 0x0400249B RID: 9371
	[HideInInspector]
	[SerializeField]
	private AkGameObj akGameObj;

	// Token: 0x0400249C RID: 9372
	[HideInInspector]
	[SerializeField]
	private RTPC rtpc;

	// Token: 0x0400249D RID: 9373
	[SerializeField]
	[HideInInspector]
	private bool preProcessed;
}