using System;
using UnityEngine;

// Token: 0x02000372 RID: 882
[ExecuteInEditMode]
public class WaterFogToShader : UmbrellaBehaviour<WaterFogToShader>, IPreAwake
{
	// Token: 0x0600181E RID: 6174 RVA: 0x000D29C8 File Offset: 0x000D0BC8
	public bool PreAwake(int callcount)
	{
		this.waterFogMI = base.GetComponent<MaterialInstance>();
		this.waterFogColorProp = this.waterFogMI.GetOrAddColorProperty("_FogColor");
		this.waterFogStartProp = this.waterFogMI.GetOrAddFloatProperty("_FogStart");
		this.waterFogEndProp = this.waterFogMI.GetOrAddFloatProperty("_FogEnd");
		this.waterFogOverrideProp = this.waterFogMI.GetOrAddFloatProperty("_FogOverride");
		this.UmbrellaUpdate();
		return true;
	}

	// Token: 0x0600181F RID: 6175 RVA: 0x000D2A40 File Offset: 0x000D0C40
	public void UmbrellaUpdate()
	{
		if (this.waterFogMI != null && Camera.main != null)
		{
			if (this.pdReflectCuller == null)
			{
				this.pdReflectCuller = Camera.main.GetComponent<PDReflectionCuller>();
			}
			this.waterFogMI.SetColorProperty(this.waterFogColorProp, this.pdReflectCuller.WaterFogColor);
			this.waterFogMI.SetFloatProperty(this.waterFogStartProp, this.pdReflectCuller.WaterFogStart);
			this.waterFogMI.SetFloatProperty(this.waterFogEndProp, this.pdReflectCuller.WaterFogEnd);
			this.waterFogMI.SetFloatProperty(this.waterFogOverrideProp, this.pdReflectCuller.WaterFogOverride);
		}
	}

	// Token: 0x04002B45 RID: 11077
	private MaterialInstance waterFogMI;

	// Token: 0x04002B46 RID: 11078
	private MaterialInstance.ColorProperty waterFogColorProp;

	// Token: 0x04002B47 RID: 11079
	private MaterialInstance.FloatProperty waterFogStartProp;

	// Token: 0x04002B48 RID: 11080
	private MaterialInstance.FloatProperty waterFogEndProp;

	// Token: 0x04002B49 RID: 11081
	private MaterialInstance.FloatProperty waterFogOverrideProp;

	// Token: 0x04002B4A RID: 11082
	private PDReflectionCuller pdReflectCuller;
}

