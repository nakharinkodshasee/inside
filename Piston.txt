using System;
using UnityEngine;

// Token: 0x020005B2 RID: 1458
public class Piston : MonoBehaviour
{
	// Token: 0x0600252A RID: 9514 RVA: 0x00131004 File Offset: 0x0012F204
	private void Reset()
	{
		if (base.GetComponent<Rigidbody>())
		{
			this.pistonRigidBody = base.GetComponent<Rigidbody>();
		}
	}

	// Token: 0x0600252B RID: 9515 RVA: 0x00131024 File Offset: 0x0012F224
	private void Start()
	{
		this.mOriginalPos = this.pistonRigidBody.position;
		this.mDir = ((this.startDelay <= 0f) ? ((int)Mathf.Sign((float)this.startDirection)) : 0);
	}

	// Token: 0x0600252C RID: 9516 RVA: 0x0013106C File Offset: 0x0012F26C
	private void FixedUpdate()
	{
		if (this.mDir == 0)
		{
			this.mWaitTimer += Time.deltaTime;
			if (this.mWaitTimer > this.startDelay)
			{
				this.mDir = (int)Mathf.Sign((float)this.startDirection);
				this.mWaitTimer = 0f;
			}
		}
		this.mHeightCounter += Time.deltaTime * ((this.peak - this.bottom) / ((this.mDir != 1) ? this.downTime : this.upTime)) * (float)this.mDir;
		if ((this.mDir == 1 && this.mHeightCounter > this.peak) || (this.mDir == -1 && this.mHeightCounter < this.bottom))
		{
			this.mHeightCounter = Mathf.Clamp(this.mHeightCounter, this.bottom, this.peak);
			this.mWaitTimer += Time.deltaTime;
			if (this.mWaitTimer >= ((this.mDir != 1) ? this.waitAtBottom : this.waitAtPeak))
			{
				this.mDir *= -1;
				this.mWaitTimer = 0f;
			}
		}
		this.pistonRigidBody.MovePosition(this.mOriginalPos + base.transform.up * this.mHeightCounter);
	}

	// Token: 0x04004416 RID: 17430
	public float peak = 1f;

	// Token: 0x04004417 RID: 17431
	public float bottom;

	// Token: 0x04004418 RID: 17432
	public float upTime = 1f;

	// Token: 0x04004419 RID: 17433
	public float waitAtPeak;

	// Token: 0x0400441A RID: 17434
	public float downTime = 1f;

	// Token: 0x0400441B RID: 17435
	public float waitAtBottom;

	// Token: 0x0400441C RID: 17436
	public float startDelay;

	// Token: 0x0400441D RID: 17437
	public int startDirection = 1;

	// Token: 0x0400441E RID: 17438
	public Rigidbody pistonRigidBody;

	// Token: 0x0400441F RID: 17439
	private float mHeightCounter;

	// Token: 0x04004420 RID: 17440
	private Vector3 mOriginalPos;

	// Token: 0x04004421 RID: 17441
	private int mDir = 1;

	// Token: 0x04004422 RID: 17442
	private float mWaitTimer;
}