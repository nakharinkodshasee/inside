using System;
using UnityEngine;

// Token: 0x020005E7 RID: 1511
public class sentryLaserSphereCast : MonoBehaviour, IPreAwake
{
	// Token: 0x06002626 RID: 9766 RVA: 0x001367B8 File Offset: 0x001349B8
	public bool PreAwake(int callcount)
	{
		this.boyVisible = SignalOut.Create("boyVisible", base.gameObject);
		this.boyNotVisible = SignalOut.Create("boyNotVisible", base.gameObject);
		this.visible = SignalOut.Create("visible", base.gameObject);
		this.notVisible = SignalOut.Create("notVisible", base.gameObject);
		this.checkBoyStatus = SignalIn.Create("checkBoyStatus", base.gameObject, new Action(this.OnCheckBoyStatus));
		return true;
	}

	// Token: 0x06002627 RID: 9767 RVA: 0x00136840 File Offset: 0x00134A40
	private bool isBoyVisible()
	{
		float magnitude;
		if (this.ignoreZdist)
		{
			Vector3 pos = ScriptGlobals.boy.pos3;
			pos.z = 0f;
			Vector3 position = this.raycastOrigin.position;
			position.z = 0f;
			magnitude = (pos - position).magnitude;
		}
		else
		{
			magnitude = (ScriptGlobals.boy.pos3 - this.raycastOrigin.position).magnitude;
		}
		if (magnitude > this.rangeOfSentry)
		{
			return false;
		}
		int num = 1 << CollisionUtils.Layers.player;
		int num2 = 1 << CollisionUtils.Layers.visualPhysics;
		int num3 = ~(num | num2);
		Vector3 normalized = (ScriptGlobals.boy.pos3 - this.raycastOrigin.position).normalized;
		RaycastHit[] array = Physics.RaycastAll(new Ray(this.raycastOrigin.position, normalized), 200f, num3);
		RaycastHit raycastHit = default(RaycastHit);
		float num4 = float.MaxValue;
		foreach (RaycastHit raycastHit2 in array)
		{
			if (!raycastHit2.collider.isTrigger && raycastHit2.distance < num4)
			{
				num4 = raycastHit2.distance;
			}
		}
		return num4 > magnitude;
	}

	// Token: 0x06002628 RID: 9768 RVA: 0x001369A8 File Offset: 0x00134BA8
	private void OnCheckBoyStatus()
	{
		if (!this.isBoyVisible() || ScriptGlobals.boy.isDead)
		{
			this.boyNotVisible.Signal();
			this.rotating = false;
		}
	}

	// Token: 0x06002629 RID: 9769 RVA: 0x001369E4 File Offset: 0x00134BE4
	private void Update()
	{
		bool flag = this.isBoyVisible();
		if (!this.boyVisibleLastFrame && flag && !this.rotating)
		{
			this.boyVisible.Signal();
			this.rotating = true;
		}
		if (!this.boyVisibleLastFrame && flag)
		{
			this.visible.Signal();
		}
		else if (this.boyVisibleLastFrame && !flag)
		{
			this.notVisible.Signal();
		}
		this.boyVisibleLastFrame = flag;
	}

	// Token: 0x04004571 RID: 17777
	public Transform raycastOrigin;

	// Token: 0x04004572 RID: 17778
	public float rangeOfSentry;

	// Token: 0x04004573 RID: 17779
	public bool ignoreZdist;

	// Token: 0x04004574 RID: 17780
	private bool boyVisibleNow;

	// Token: 0x04004575 RID: 17781
	private bool boyVisibleLastFrame;

	// Token: 0x04004576 RID: 17782
	private bool rotating;

	// Token: 0x04004577 RID: 17783
	private SignalOut boyVisible;

	// Token: 0x04004578 RID: 17784
	private SignalOut boyNotVisible;

	// Token: 0x04004579 RID: 17785
	private SignalOut visible;

	// Token: 0x0400457A RID: 17786
	private SignalOut notVisible;

	// Token: 0x0400457B RID: 17787
	private SignalIn checkBoyStatus;
}
