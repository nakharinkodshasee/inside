using System;
using System.Collections.Generic;
using UnityEngine;

// Token: 0x020004F4 RID: 1268
public class SwitchBoxAlbinoCounter : MonoBehaviour, IFastEventExListener<Collider>, IPreAwake
{
	// Token: 0x06002136 RID: 8502 RVA: 0x001162F0 File Offset: 0x001144F0
	public bool PreAwake(int callcount)
	{
		this.countReached = SignalOut.Create("countReached", base.gameObject);
		this.attractAlbinos = SignalOut.Create("attractAlbinos", base.gameObject);
		this.releaseAlbinos = SignalOut.Create("releaseAlbinos", base.gameObject);
		this.wakeAlbinos = SignalOut.Create("wakeAlbinos", base.gameObject);
		this.setCompleted = SignalIn.Create("setCompleted", base.gameObject, new Action(this.SetCountHasBeenReached));
		return true;
	}

	// Token: 0x06002137 RID: 8503 RVA: 0x00116378 File Offset: 0x00114578
	private void Start()
	{
		this.playerTriggerCollisionEvents.enterTrigger.Register(this, ref this.playerTriggerEnterHandle);
		this.playerTriggerCollisionEvents.exitTrigger.Register(this, ref this.playerTriggerExitHandle);
		this.switchTransform = base.transform;
	}

	// Token: 0x06002138 RID: 8504 RVA: 0x001163C0 File Offset: 0x001145C0
	private void Update()
	{
		if (this.countHasBeenReached)
		{
			return;
		}
		if (this.display.displayOn && this.display.GetNumberShown() == 0)
		{
			this.countHasBeenReached = true;
			this.countReached.Signal();
		}
		else
		{
			this.AlbinoAttractCheck();
			this.CheckBoyOnPlate();
		}
	}

	// Token: 0x06002139 RID: 8505 RVA: 0x0011641C File Offset: 0x0011461C
	private void CheckBoyOnPlate()
	{
		this.boyOnPlate = (this.boyInside && !(ScriptGlobals.boy.state is BoyJumpState));
		if (this.boyOnPlate && !this.previousBoyOnPlate)
		{
			this.CountUp();
		}
		else if (!this.boyOnPlate && this.previousBoyOnPlate)
		{
			this.CountDown();
		}
		this.previousBoyOnPlate = this.boyOnPlate;
	}

	// Token: 0x0600213A RID: 8506 RVA: 0x0011649C File Offset: 0x0011469C
	private void AlbinoAttractCheck()
	{
		MindHatOnHead mindHatOnHead = LevelGlobals.mindHatOnHead;
		if (!mindHatOnHead || !mindHatOnHead.IsAttached())
		{
			return;
		}
		if (this.isAlbinosAttracted)
		{
			Vector3 position = this.switchTransform.position;
			Vector3 pos = ScriptGlobals.boy.pos3;
			if (!this.boyInside && pos.x < position.x)
			{
				this.releaseAlbinos.Signal();
				this.isAlbinosAttracted = false;
			}
		}
		else if (this.boyInside)
		{
			if (!this.isAlbinosAwake)
			{
				this.wakeAlbinos.Signal();
				this.isAlbinosAwake = true;
			}
			this.attractAlbinos.Signal();
			this.isAlbinosAttracted = true;
		}
	}

	// Token: 0x0600213B RID: 8507 RVA: 0x00116558 File Offset: 0x00114758
	private int SafetyHackExtraInside()
	{
		if (this.noOfCharacterProbesInside > this.countTarget - 7 && AlbinoGroupManager.mInstance.AreAllAlbinosAwake())
		{
			return AlbinoGroupManager.mInstance.CountAlbinosInBadFollowPosition(base.transform.position.y - 13f);
		}
		return 0;
	}

	// Token: 0x0600213C RID: 8508 RVA: 0x001165B0 File Offset: 0x001147B0
	private void CountUp()
	{
		if (this.countHasBeenReached)
		{
			return;
		}
		this.noOfCharacterProbesInside++;
		int num = this.SafetyHackExtraInside();
		this.display.SetNumber(this.countTarget - (this.noOfCharacterProbesInside + num));
	}

	// Token: 0x0600213D RID: 8509 RVA: 0x001165F8 File Offset: 0x001147F8
	private void CountDown()
	{
		if (this.countHasBeenReached)
		{
			return;
		}
		this.noOfCharacterProbesInside--;
		int num = this.SafetyHackExtraInside();
		this.display.SetNumber(this.countTarget - (this.noOfCharacterProbesInside + num));
	}

	// Token: 0x0600213E RID: 8510 RVA: 0x00116640 File Offset: 0x00114840
	private void SetCountHasBeenReached()
	{
		this.countHasBeenReached = true;
	}

	// Token: 0x0600213F RID: 8511 RVA: 0x0011664C File Offset: 0x0011484C
	public void OnFastEventEx(FastEventEx<Collider> sender, ref Collider collider)
	{
		if (sender == this.playerTriggerCollisionEvents.enterTrigger)
		{
			this.OnPlayerTriggerEnter(collider);
		}
		else if (sender == this.playerTriggerCollisionEvents.exitTrigger)
		{
			this.OnPlayerTriggerExit(collider);
		}
	}

	// Token: 0x06002140 RID: 8512 RVA: 0x00116688 File Offset: 0x00114888
	private void OnPlayerTriggerEnter(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			this.boyInside = true;
		}
	}

	// Token: 0x06002141 RID: 8513 RVA: 0x001166A4 File Offset: 0x001148A4
	private void OnPlayerTriggerExit(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			this.boyInside = false;
		}
	}

	// Token: 0x06002142 RID: 8514 RVA: 0x001166C0 File Offset: 0x001148C0
	private void OnTriggerEnter(Collider coll)
	{
		AlbinoAI component = coll.GetComponent<AlbinoAI>();
		if (component && !this.albinosInside.Contains(component))
		{
			this.albinosInside.Add(component);
			this.CountUp();
		}
		if (coll.attachedRigidbody != null && coll.attachedRigidbody.GetComponent<DeadAlbinoProbe>() != null && !this.corpseOnPlate)
		{
			this.CountUp();
			this.corpseOnPlate = true;
			this.corpseOnCounter.current = true;
		}
	}

	// Token: 0x06002143 RID: 8515 RVA: 0x00116750 File Offset: 0x00114950
	private void OnTriggerExit(Collider coll)
	{
		AlbinoAI component = coll.GetComponent<AlbinoAI>();
		if (component)
		{
			this.albinosInside.Remove(component);
			this.CountDown();
		}
		if (coll.attachedRigidbody != null && coll.attachedRigidbody.GetComponent<DeadAlbinoProbe>() != null && this.corpseOnPlate)
		{
			this.CountDown();
			this.corpseOnPlate = false;
			this.corpseOnCounter.current = false;
		}
	}

	// Token: 0x04003D92 RID: 15762
	public CollisionEvents playerTriggerCollisionEvents;

	// Token: 0x04003D93 RID: 15763
	public NixieDisplay display;

	// Token: 0x04003D94 RID: 15764
	public float albinosAttractDist = 4.5f;

	// Token: 0x04003D95 RID: 15765
	public float albinosReleaseDist = 5f;

	// Token: 0x04003D96 RID: 15766
	public PersistentBool corpseOnCounter;

	// Token: 0x04003D97 RID: 15767
	private SignalOut countReached;

	// Token: 0x04003D98 RID: 15768
	private SignalOut wakeAlbinos;

	// Token: 0x04003D99 RID: 15769
	private SignalOut attractAlbinos;

	// Token: 0x04003D9A RID: 15770
	private SignalOut releaseAlbinos;

	// Token: 0x04003D9B RID: 15771
	private SignalIn setCompleted;

	// Token: 0x04003D9C RID: 15772
	private bool countHasBeenReached;

	// Token: 0x04003D9D RID: 15773
	private int noOfCharacterProbesInside;

	// Token: 0x04003D9E RID: 15774
	private bool isAlbinosAttracted;

	// Token: 0x04003D9F RID: 15775
	private bool isAlbinosAwake;

	// Token: 0x04003DA0 RID: 15776
	private int countTarget = 20;

	// Token: 0x04003DA1 RID: 15777
	private List<AlbinoAI> albinosInside = new List<AlbinoAI>();

	// Token: 0x04003DA2 RID: 15778
	private bool boyInside;

	// Token: 0x04003DA3 RID: 15779
	private bool boyOnPlate;

	// Token: 0x04003DA4 RID: 15780
	private bool corpseOnPlate;

	// Token: 0x04003DA5 RID: 15781
	private bool previousBoyOnPlate;

	// Token: 0x04003DA6 RID: 15782
	private Transform switchTransform;

	// Token: 0x04003DA7 RID: 15783
	private int playerTriggerEnterHandle = -1;

	// Token: 0x04003DA8 RID: 15784
	private int playerTriggerExitHandle = -1;
}