using System;
using UnityEngine;

// Token: 0x02000223 RID: 547
public class SecretSuitcase : Device, IPreAwake
{
	// Token: 0x060010E8 RID: 4328 RVA: 0x0009F848 File Offset: 0x0009DA48
	public bool PreAwake(int callcount)
	{
		this.success = SignalOut.Create("success", base.gameObject);
		this.loadTaken = SignalIn.Create("loadTaken", base.gameObject, new Action(this.OnLoadTaken));
		return true;
	}

	// Token: 0x060010E9 RID: 4329 RVA: 0x0009F890 File Offset: 0x0009DA90
	protected override void Start()
	{
		base.Start();
		this.animSuitcasePullState = this.animSuitcase[this.animSuitcasePull.name];
		this.animSuitcaseOpenState = this.animSuitcase[this.animSuitcaseOpen.name];
		this.SetIdleState();
	}

	// Token: 0x060010EA RID: 4330 RVA: 0x0009F8E4 File Offset: 0x0009DAE4
	private void SetIdleState()
	{
		this.animSuitcase.CrossFade(this.animSuitcaseClosed.name, 0.1f);
		this.state = SecretSuitcase.State.Idle;
	}

	// Token: 0x060010EB RID: 4331 RVA: 0x0009F914 File Offset: 0x0009DB14
	private void IdleState()
	{
		int i = 0;
		int count = this.boysInside.Count;
		while (i < count)
		{
			Boy boy = this.boysInside[i];
			if (Device.GrabCheck(boy, true))
			{
				this.SetGrabState(boy);
			}
			i++;
		}
	}

	// Token: 0x060010EC RID: 4332 RVA: 0x0009F960 File Offset: 0x0009DB60
	private void SetGrabState(Boy boy)
	{
		this.boyGrabbing = boy;
		BoyUtils.StartCustomAnim(boy, this.animGrab, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
		this.animSuitcase.CrossFade(this.animSuitcaseClosed.name, 0.2f);
		this.state = SecretSuitcase.State.Grab;
	}

	// Token: 0x060010ED RID: 4333 RVA: 0x0009F9A0 File Offset: 0x0009DBA0
	private void SetGrabStateNoTransition()
	{
		BoyUtils.StartCustomAnim(this.boyGrabbing, this.animIdle, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
		this.animSuitcase.CrossFade(this.animSuitcaseClosed.name, 0.2f);
		this.state = SecretSuitcase.State.Grab;
	}

	// Token: 0x060010EE RID: 4334 RVA: 0x0009F9E0 File Offset: 0x0009DBE0
	private void GrabState()
	{
		if (this.boyGrabbing.isDead || !this.boyGrabbing.input.rawAction)
		{
			this.Release();
			return;
		}
		BoyCustomAnimState boyCustomAnimState = this.boyGrabbing.state as BoyCustomAnimState;
		if (boyCustomAnimState != null && boyCustomAnimState.anim == this.animGrab && this.animGrab.frame / this.animGrab.numFrames > 0.9f)
		{
			BoyUtils.StartCustomAnim(this.boyGrabbing, this.animIdle, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
		}
		float y = this.boyGrabbing.input.stick.y;
		if (y > 0.4f)
		{
			this.SetPullState();
		}
	}

	// Token: 0x060010EF RID: 4335 RVA: 0x0009FAAC File Offset: 0x0009DCAC
	private void SetPullState()
	{
		BoyUtils.StartCustomAnim(this.boyGrabbing, this.animPull, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
		this.animSuitcase.Play(this.animSuitcasePull.name);
		this.state = SecretSuitcase.State.Pull;
	}

	// Token: 0x060010F0 RID: 4336 RVA: 0x0009FAE8 File Offset: 0x0009DCE8
	private void PullState()
	{
		float normalizedTime = this.animSuitcasePullState.normalizedTime;
		if (normalizedTime < 0.8f)
		{
			if (this.boyGrabbing.isDead || !this.boyGrabbing.input.rawAction)
			{
				this.Release();
				return;
			}
			float y = this.boyGrabbing.input.stick.y;
			if (y < 0.4f)
			{
				this.SetGrabStateNoTransition();
				return;
			}
		}
		else if (normalizedTime >= 1f)
		{
			this.SetOpenState();
		}
	}

	// Token: 0x060010F1 RID: 4337 RVA: 0x0009FB7C File Offset: 0x0009DD7C
	private void SetOpenState()
	{
		BoyUtils.StartCustomAnim(this.boyGrabbing, this.animOpen, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
		this.animSuitcase.Play(this.animSuitcaseOpen.name);
		User.Achievement.Acquire(this.achievement);
		this.success.Signal();
		this.state = SecretSuitcase.State.Open;
	}

	// Token: 0x060010F2 RID: 4338 RVA: 0x0009FBDC File Offset: 0x0009DDDC
	private void OpenState()
	{
		this.guiAlpha += Time.deltaTime * 7f;
		if (this.guiAlpha >= 1f)
		{
			this.SetShowState();
		}
	}

	// Token: 0x060010F3 RID: 4339 RVA: 0x0009FC18 File Offset: 0x0009DE18
	private void SetShowState()
	{
		this.guiAlpha = 1f;
		this.waitTimer = 5f;
		this.state = SecretSuitcase.State.Show;
	}

	// Token: 0x060010F4 RID: 4340 RVA: 0x0009FC38 File Offset: 0x0009DE38
	private void ShowState()
	{
		this.waitTimer -= Time.deltaTime;
		if (this.waitTimer < 0f)
		{
			this.guiAlpha -= Time.deltaTime * 2f;
			if (this.guiAlpha <= 0f)
			{
				this.SetCompleteState();
			}
		}
	}

	// Token: 0x060010F5 RID: 4341 RVA: 0x0009FC98 File Offset: 0x0009DE98
	private void SetCompleteState()
	{
		this.guiAlpha = 0f;
		this.state = SecretSuitcase.State.Complete;
	}

	// Token: 0x060010F6 RID: 4342 RVA: 0x0009FCAC File Offset: 0x0009DEAC
	private void CompleteState()
	{
	}

	// Token: 0x060010F7 RID: 4343 RVA: 0x0009FCB0 File Offset: 0x0009DEB0
	private void FixedUpdate()
	{
		switch (this.state)
		{
		case SecretSuitcase.State.Idle:
			this.IdleState();
			break;
		case SecretSuitcase.State.Grab:
			this.GrabState();
			break;
		case SecretSuitcase.State.Pull:
			this.PullState();
			break;
		case SecretSuitcase.State.Open:
			this.OpenState();
			break;
		case SecretSuitcase.State.Show:
			this.ShowState();
			break;
		case SecretSuitcase.State.Complete:
			this.CompleteState();
			break;
		}
	}

	// Token: 0x060010F8 RID: 4344 RVA: 0x0009FD2C File Offset: 0x0009DF2C
	private void Release()
	{
		if (this.boyGrabbing && !this.boyGrabbing.isDead)
		{
			BoyUtils.ClearState(this.boyGrabbing, 0.35f);
		}
		this.SetIdleState();
	}

	// Token: 0x060010F9 RID: 4345 RVA: 0x0009FD70 File Offset: 0x0009DF70
	private void OnLoadTaken()
	{
		this.animSuitcase.Play(this.animSuitcaseOpen.name);
		this.animSuitcaseOpenState.normalizedTime = 1f;
		this.SetCompleteState();
	}

	// Token: 0x060010FA RID: 4346 RVA: 0x0009FDA0 File Offset: 0x0009DFA0
	private void OnGUI()
	{
		if (this.guiAlpha > 0f)
		{
			float num = 3.5f;
			float num2 = 28f;
			float num3 = 40f;
			float num4 = (float)Screen.width;
			if (num4 < 745f)
			{
				num4 = 745f;
			}
			float num5 = num4 / num;
			float num6 = num4 / num2;
			float num7 = 15f;
			float num8 = (float)Screen.width - num5 - num7;
			float num9 = (float)Screen.height - num6 - num7;
			GUI.color = new Color(1f, 1f, 1f, this.guiAlpha);
			GUI.skin.box.fontSize = Mathf.RoundToInt(num4 / num3);
			GUI.Box(new Rect(num8, num9, num5, num6), "Achievement unlocked");
		}
	}

	// Token: 0x04001EB8 RID: 7864
	public AnimClipNode animGrab;

	// Token: 0x04001EB9 RID: 7865
	public AnimClipNode animIdle;

	// Token: 0x04001EBA RID: 7866
	public AnimClipNode animPull;

	// Token: 0x04001EBB RID: 7867
	public AnimClipNode animOpen;

	// Token: 0x04001EBC RID: 7868
	public Animation animSuitcase;

	// Token: 0x04001EBD RID: 7869
	public AnimationClip animSuitcaseClosed;

	// Token: 0x04001EBE RID: 7870
	public AnimationClip animSuitcasePull;

	// Token: 0x04001EBF RID: 7871
	public AnimationClip animSuitcaseOpen;

	// Token: 0x04001EC0 RID: 7872
	public AchievementPlatform.EAchievements achievement;

	// Token: 0x04001EC1 RID: 7873
	private SignalOut success;

	// Token: 0x04001EC2 RID: 7874
	private SignalIn loadTaken;

	// Token: 0x04001EC3 RID: 7875
	private SecretSuitcase.State state;

	// Token: 0x04001EC4 RID: 7876
	private AnimationState animSuitcasePullState;

	// Token: 0x04001EC5 RID: 7877
	private AnimationState animSuitcaseOpenState;

	// Token: 0x04001EC6 RID: 7878
	private float guiAlpha;

	// Token: 0x04001EC7 RID: 7879
	private float waitTimer;

	// Token: 0x02000224 RID: 548
	private enum State
	{
		// Token: 0x04001EC9 RID: 7881
		None,
		// Token: 0x04001ECA RID: 7882
		Idle,
		// Token: 0x04001ECB RID: 7883
		Grab,
		// Token: 0x04001ECC RID: 7884
		Pull,
		// Token: 0x04001ECD RID: 7885
		Open,
		// Token: 0x04001ECE RID: 7886
		Show,
		// Token: 0x04001ECF RID: 7887
		Complete
	}
}