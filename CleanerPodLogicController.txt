using System;
using UnityEngine;

// Token: 0x020004F9 RID: 1273
public class CleanerPodLogicController : MonoBehaviour
{
	// Token: 0x06002159 RID: 8537 RVA: 0x00117170 File Offset: 0x00115370
	private void OnTriggerEnter(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			this.boyInside = true;
		}
	}

	// Token: 0x0600215A RID: 8538 RVA: 0x0011718C File Offset: 0x0011538C
	private void OnTriggerExit(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			this.boyInside = false;
		}
	}

	// Token: 0x0600215B RID: 8539 RVA: 0x001171A8 File Offset: 0x001153A8
	private void FixedUpdate()
	{
		if (!this.controllerIsActive && this.boyInside && ScriptGlobals.boy.input.rawAction)
		{
			this.controllerIsActive = true;
			BoyUtils.StartCustomAnim(ScriptGlobals.boy, this.animBlendNode, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
			this.controllerFraction = 0.5f;
		}
		else if (this.controllerIsActive && !ScriptGlobals.boy.input.rawAction)
		{
			BoyUtils.ClearState(ScriptGlobals.boy, -1f);
			this.controllerIsActive = false;
			this.controllerFraction = 0.5f;
		}
		if (this.controllerIsActive)
		{
			float num = ScriptGlobals.boy.input.stick.y;
			if (Mathf.Abs(num) > 0.8f)
			{
				num = 1f * Mathf.Sign(num);
			}
			this.controllerFraction = Mathf.MoveTowards(this.controllerFraction, Mathf.InverseLerp(-1f, 1f, num), Time.deltaTime * 3.5f);
			this.animBlendNode.currentBlendValue = Mathf.Lerp(0f, 0.6f, this.controllerFraction);
		}
		Vector3 eulerAngles = this.rotater1.localRotation.eulerAngles;
		if (eulerAngles.x > 180f && eulerAngles.x < 325f && this.controllerFraction > 0.5f)
		{
			return;
		}
		if (eulerAngles.x < 180f && eulerAngles.x > 18f && this.controllerFraction < 0.5f)
		{
			return;
		}
		this.rotater1.Rotate(Vector3.up, Mathf.Lerp(-0.5f, 0.5f, this.controllerFraction) * Time.deltaTime * 10f * 0.8f, 1);
		this.rotater2.Rotate(Vector3.up, Mathf.Lerp(-0.5f, 0.5f, this.controllerFraction) * Time.deltaTime * 15f * 0.8f, 1);
	}

	// Token: 0x04003DD3 RID: 15827
	public AnimBlendNode animBlendNode;

	// Token: 0x04003DD4 RID: 15828
	public Transform rotater1;

	// Token: 0x04003DD5 RID: 15829
	public Transform rotater2;

	// Token: 0x04003DD6 RID: 15830
	private bool boyInside;

	// Token: 0x04003DD7 RID: 15831
	private bool controllerIsActive;

	// Token: 0x04003DD8 RID: 15832
	private float controllerFraction = 0.5f;
}