using System;
using UnityEngine;

// Token: 0x0200041C RID: 1052
public class SentryRoomTwitchCorpse : MonoBehaviour, IPreAwake
{
	// Token: 0x06001B9B RID: 7067 RVA: 0x000F1BE0 File Offset: 0x000EFDE0
	public bool PreAwake(int callcount)
	{
		this.enableTwitching = SignalIn.Create("enableTwitching", base.gameObject, new Action(this.OnStartTwitch));
		this.disableTwitching = SignalIn.Create("disableTwitching", base.gameObject, new Action(this.OnStopTwitch));
		this.anim = base.GetComponent<Animation>();
		return true;
	}

	// Token: 0x06001B9C RID: 7068 RVA: 0x000F1C40 File Offset: 0x000EFE40
	private void Update()
	{
		if (this.isTwitching)
		{
			this.timer -= Time.deltaTime;
			if (this.timer <= 0f)
			{
				this.Twitch();
			}
		}
	}

	// Token: 0x06001B9D RID: 7069 RVA: 0x000F1C78 File Offset: 0x000EFE78
	private void Twitch()
	{
		this.anim.Play(this.twitchAnim);
		this.timer = Random.Range(this.minTwitchTime, this.maxTwitchTime);
	}

	// Token: 0x06001B9E RID: 7070 RVA: 0x000F1CA4 File Offset: 0x000EFEA4
	private void OnStartTwitch()
	{
		this.Twitch();
		this.isTwitching = true;
	}

	// Token: 0x06001B9F RID: 7071 RVA: 0x000F1CB4 File Offset: 0x000EFEB4
	private void OnStopTwitch()
	{
		this.anim.CrossFade(this.idleAnim);
		this.isTwitching = false;
	}

	// Token: 0x0400325A RID: 12890
	public string idleAnim;

	// Token: 0x0400325B RID: 12891
	public string twitchAnim;

	// Token: 0x0400325C RID: 12892
	public float minTwitchTime;

	// Token: 0x0400325D RID: 12893
	public float maxTwitchTime;

	// Token: 0x0400325E RID: 12894
	private SignalIn enableTwitching;

	// Token: 0x0400325F RID: 12895
	private SignalIn disableTwitching;

	// Token: 0x04003260 RID: 12896
	private bool isTwitching;

	// Token: 0x04003261 RID: 12897
	private float timer;

	// Token: 0x04003262 RID: 12898
	private Animation anim;
}
