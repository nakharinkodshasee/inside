using System;
using System.Collections.Generic;
using UnityEngine;

// Token: 0x02000117 RID: 279
public class ClimbControllerTrigger : MonoBehaviour
{
	// Token: 0x0600087E RID: 2174 RVA: 0x0005A9F0 File Offset: 0x00058BF0
	private void OnTriggerEnter(Collider coll)
	{
		BoyProbe component = coll.GetComponent<BoyProbe>();
		if (component && !this.boysInsideList.Contains(component.boy))
		{
			this.boysInsideList.Add(component.boy);
		}
	}

	// Token: 0x0600087F RID: 2175 RVA: 0x0005AA38 File Offset: 0x00058C38
	private void OnTriggerExit(Collider coll)
	{
		BoyProbe component = coll.GetComponent<BoyProbe>();
		if (component)
		{
			this.boysInsideList.Remove(component.boy);
		}
	}

	// Token: 0x06000880 RID: 2176 RVA: 0x0005AA6C File Offset: 0x00058C6C
	private void FixedUpdate()
	{
		int i = 0;
		int count = this.boysInsideList.Count;
		while (i < count)
		{
			Boy boy = this.boysInsideList[i];
			if (this.climbController != null && !boy.isDead)
			{
				bool flag = false;
				if (this.isEnterFromTopTrigger)
				{
					float num = boy.pos.y - base.transform.position.y;
					if (num > 0f)
					{
						flag = true;
					}
				}
				if (flag)
				{
					this.climbController.BoyInsideTopTrigger(boy);
				}
				else
				{
					if ((Mathf.Abs(ScriptGlobals.boy.velocity.x) < 0.6f || ScriptGlobals.boy.velocity.y < -3f) && !(ScriptGlobals.boy.state is BoySlideState) && base.transform.InverseTransformPoint(ScriptGlobals.boy.pos3).z < -0.55f)
					{
						return;
					}
					this.climbController.BoyInsideTrigger(boy);
				}
			}
			i++;
		}
	}

	// Token: 0x04000E6F RID: 3695
	public bool isEnterFromTopTrigger;

	// Token: 0x04000E70 RID: 3696
	public ClimbController climbController;

	// Token: 0x04000E71 RID: 3697
	private List<Boy> boysInsideList = new List<Boy>();
}