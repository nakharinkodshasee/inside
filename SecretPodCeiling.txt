using System;
using UnityEngine;

// Token: 0x0200021E RID: 542
public class SecretPodCeiling : Device, IPreAwake
{
	// Token: 0x060010BE RID: 4286 RVA: 0x0009E5A4 File Offset: 0x0009C7A4
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		AkGameObj akGameObj = AudioUtils.EnsureAkGameObj(base.gameObject, this);
		this.audioGrab = new AudioEventSimpleLocal(this.audioPrefix + "_grab", akGameObj);
		this.audioComplete = new AudioEventSimpleLocal(this.audioPrefix + "_complete", akGameObj);
		this.audioCompleteAquire = new AudioEventSimpleLocal(this.audioPrefix + "_completeAquire", akGameObj);
		this.audioParticles = new AudioEventSimpleLocal(this.audioPrefix + "_particleStart", akGameObj);
	}

	// Token: 0x060010BF RID: 4287 RVA: 0x0009E644 File Offset: 0x0009C844
	public bool PreAwake(int callcount)
	{
		this.success = SignalOut.Create("success", base.gameObject);
		this.loadAcquired = SignalOut.Create("loadAcquired", base.gameObject);
		return true;
	}

	// Token: 0x060010C0 RID: 4288 RVA: 0x0009E680 File Offset: 0x0009C880
	protected override void Start()
	{
		this.OnPreProcess();
		this.triggerGrab.enterTrigger.Register(this, ref this.grabTriggerEnterHandle);
		this.acquired = User.Achievement.IsAcquired(this.achievement);
		this.acquiredRecently = User.Achievement.IsAcquiredRecently(this.achievement);
		if (this.acquired)
		{
			int i = 0;
			int num = this.deactivateOnLoadComplete.Length;
			while (i < num)
			{
				this.deactivateOnLoadComplete[i].SetActive(false);
				i++;
			}
			if (this.probeFlicker)
			{
				this.probeFlicker.OnSetDeactivate();
			}
		}
		if (this.acquiredRecently)
		{
			this.loadAcquired.Signal();
			this.LoadComplete();
		}
		else
		{
			this.SetIdleState();
		}
	}

	// Token: 0x060010C1 RID: 4289 RVA: 0x0009E74C File Offset: 0x0009C94C
	private void SetIdleState()
	{
		this.state = SecretPodCeiling.State.Idle;
	}

	// Token: 0x060010C2 RID: 4290 RVA: 0x0009E758 File Offset: 0x0009C958
	private void IdleState()
	{
	}

	// Token: 0x060010C3 RID: 4291 RVA: 0x0009E75C File Offset: 0x0009C95C
	private void SetGrabState(Boy boy)
	{
		bool flag = boy.pos.x > this.triggerGrab.transform.position.x;
		if (flag)
		{
			BoyUtils.StartCustomAnim(boy, this.animGrabRight, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
			this.animDevice.Play(this.animDeviceGrabRight.name);
		}
		else
		{
			BoyUtils.StartCustomAnim(boy, this.animGrabLeft, null, 0f, Boy.AffectMode.Default, EffectMaterial.Material.None);
			this.animDevice.Play(this.animDeviceGrabLeft.name);
		}
		this.audioGrab.PostFast();
		this.successTimer = this.successDelay;
		this.successAudioTimer = this.successAudioDelay;
		this.state = SecretPodCeiling.State.Grab;
	}

	// Token: 0x060010C4 RID: 4292 RVA: 0x0009E820 File Offset: 0x0009CA20
	private void GrabState()
	{
		if (this.successAudioTimer > 0f)
		{
			this.successAudioTimer -= Time.deltaTime;
			if (this.successAudioTimer <= 0f)
			{
				if (this.acquired)
				{
					this.audioComplete.PostFast();
				}
				else
				{
					this.audioCompleteAquire.PostFast();
				}
			}
		}
		this.successTimer -= Time.deltaTime;
		if (this.successTimer < 0f)
		{
			this.SetSuccessState();
		}
	}

	// Token: 0x060010C5 RID: 4293 RVA: 0x0009E8B0 File Offset: 0x0009CAB0
	private void SetSuccessState()
	{
		if (!this.acquired && this.probeFlicker)
		{
			this.probeFlicker.OnSetActivated();
		}
		int i = 0;
		int num = this.particlesSuccess.Length;
		while (i < num)
		{
			this.particlesSuccess[i].Play();
			i++;
		}
		this.audioParticles.PostFast();
		this.success.Signal();
		RumbleManager.instance.AddOneTimeEffect(RumbleEffect.RumbleEffects.Spike, 0.3f, 0.2f, 0, 0f);
		User.Achievement.Acquire(this.achievement);
		SingletonBehaviour<AchievementsOverlay>.instance.ShowAchievement();
		this.state = SecretPodCeiling.State.Success;
	}

	// Token: 0x060010C6 RID: 4294 RVA: 0x0009E960 File Offset: 0x0009CB60
	private void SuccessState()
	{
	}

	// Token: 0x060010C7 RID: 4295 RVA: 0x0009E964 File Offset: 0x0009CB64
	private void FixedUpdate()
	{
		switch (this.state)
		{
		case SecretPodCeiling.State.Idle:
			this.IdleState();
			break;
		case SecretPodCeiling.State.Grab:
			this.GrabState();
			break;
		case SecretPodCeiling.State.Success:
			this.SuccessState();
			break;
		}
	}

	// Token: 0x060010C8 RID: 4296 RVA: 0x0009E9B4 File Offset: 0x0009CBB4
	private void LoadComplete()
	{
		this.animDevice.Play(this.animDeviceGrabLeft.name);
		AnimationState animationState = this.animDevice[this.animDeviceGrabLeft.name];
		animationState.normalizedTime = 1f;
		this.state = SecretPodCeiling.State.Success;
	}

	// Token: 0x060010C9 RID: 4297 RVA: 0x0009EA04 File Offset: 0x0009CC04
	public override void OnFastEventEx(FastEventEx<Collider> sender, ref Collider collider)
	{
		base.OnFastEventEx(sender, ref collider);
		if (sender == this.triggerGrab.enterTrigger)
		{
			this.OnTriggerGrabEnter(collider);
		}
	}

	// Token: 0x060010CA RID: 4298 RVA: 0x0009EA28 File Offset: 0x0009CC28
	private void OnTriggerGrabEnter(Collider collider)
	{
		if (this.state == SecretPodCeiling.State.Idle)
		{
			BoyProbe component = collider.GetComponent<BoyProbe>();
			if (component)
			{
				this.SetGrabState(component.boy);
			}
		}
	}

	// Token: 0x04001E4F RID: 7759
	public AchievementPlatform.EAchievements achievement;

	// Token: 0x04001E50 RID: 7760
	public AnimClipNode animGrabLeft;

	// Token: 0x04001E51 RID: 7761
	public AnimClipNode animGrabRight;

	// Token: 0x04001E52 RID: 7762
	public Animation animDevice;

	// Token: 0x04001E53 RID: 7763
	public AnimationClip animDeviceGrabLeft;

	// Token: 0x04001E54 RID: 7764
	public AnimationClip animDeviceGrabRight;

	// Token: 0x04001E55 RID: 7765
	public float successDelay = 0.6f;

	// Token: 0x04001E56 RID: 7766
	public float successAudioDelay = 0.4f;

	// Token: 0x04001E57 RID: 7767
	public SecretProbeFlicker probeFlicker;

	// Token: 0x04001E58 RID: 7768
	public ParticleSystem[] particlesSuccess;

	// Token: 0x04001E59 RID: 7769
	public GameObject[] deactivateOnLoadComplete;

	// Token: 0x04001E5A RID: 7770
	public string audioPrefix;

	// Token: 0x04001E5B RID: 7771
	private SignalOut loadAcquired;

	// Token: 0x04001E5C RID: 7772
	private SignalOut success;

	// Token: 0x04001E5D RID: 7773
	private SecretPodCeiling.State state;

	// Token: 0x04001E5E RID: 7774
	private bool acquired;

	// Token: 0x04001E5F RID: 7775
	private bool acquiredRecently;

	// Token: 0x04001E60 RID: 7776
	private float guiWaitTimer;

	// Token: 0x04001E61 RID: 7777
	private float successTimer;

	// Token: 0x04001E62 RID: 7778
	private float successAudioTimer;

	// Token: 0x04001E63 RID: 7779
	private int grabTriggerEnterHandle = -1;

	// Token: 0x04001E64 RID: 7780
	[SerializeField]
	[HideInInspector]
	private AudioEventSimpleLocal audioGrab;

	// Token: 0x04001E65 RID: 7781
	[SerializeField]
	[HideInInspector]
	private AudioEventSimpleLocal audioComplete;

	// Token: 0x04001E66 RID: 7782
	[SerializeField]
	[HideInInspector]
	private AudioEventSimpleLocal audioCompleteAquire;

	// Token: 0x04001E67 RID: 7783
	[SerializeField]
	[HideInInspector]
	private AudioEventSimpleLocal audioParticles;

	// Token: 0x04001E68 RID: 7784
	[HideInInspector]
	[SerializeField]
	private bool preProcessed;

	// Token: 0x0200021F RID: 543
	private enum State
	{
		// Token: 0x04001E6A RID: 7786
		None,
		// Token: 0x04001E6B RID: 7787
		Idle,
		// Token: 0x04001E6C RID: 7788
		Grab,
		// Token: 0x04001E6D RID: 7789
		Success
	}
}
