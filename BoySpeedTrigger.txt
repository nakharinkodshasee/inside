using System;
using UnityEngine;

// Token: 0x0200015E RID: 350
public class BoySpeedTrigger : DefaultBoyInput, IAudioRunSpeedModifier
{
	// Token: 0x17000039 RID: 57
	// (get) Token: 0x06000A6D RID: 2669 RVA: 0x00066A98 File Offset: 0x00064C98
	public override vector2f stick
	{
		get
		{
			vector2f stick = base.stick;
			stick.x *= this.GetCurrentSpeedModifier();
			if (Mathf.Abs(stick.x) < 0.4f)
			{
				stick.x = base.stick.x;
			}
			return stick;
		}
	}

	// Token: 0x06000A6E RID: 2670 RVA: 0x00066AEC File Offset: 0x00064CEC
	private void Start()
	{
	}

	// Token: 0x06000A6F RID: 2671 RVA: 0x00066AF0 File Offset: 0x00064CF0
	private void FixedUpdate()
	{
		float num = Time.fixedDeltaTime / this.changeTime;
		if (this.speedTriggerActive)
		{
			this.speedFrac = Mathf.Min(1f, this.speedFrac + num);
		}
		else if (this.speedFrac > 0f)
		{
			this.speedFrac = Mathf.Max(0f, this.speedFrac - num);
			if (this.speedFrac <= 0f)
			{
				ScriptGlobals.boy.input = null;
			}
		}
	}

	// Token: 0x06000A70 RID: 2672 RVA: 0x00066B78 File Offset: 0x00064D78
	private void OnTriggerEnter(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			ScriptGlobals.boy.input = this;
			this.speedTriggerActive = true;
		}
	}

	// Token: 0x06000A71 RID: 2673 RVA: 0x00066BA8 File Offset: 0x00064DA8
	private void OnTriggerExit(Collider coll)
	{
		if (coll.GetComponent<BoyProbe>())
		{
			this.speedTriggerActive = false;
		}
	}

	// Token: 0x06000A72 RID: 2674 RVA: 0x00066BC4 File Offset: 0x00064DC4
	public float GetCurrentSpeedModifier()
	{
		return Mathf.Lerp(1f, this.moveSpeedTarget, this.speedFrac);
	}

	// Token: 0x1700003A RID: 58
	// (get) Token: 0x06000A73 RID: 2675 RVA: 0x00066BDC File Offset: 0x00064DDC
	public bool shouldAudioIgnoreModification
	{
		get
		{
			return this.audioIgnoreModification;
		}
	}

	// Token: 0x040011F4 RID: 4596
	public float moveSpeedTarget = 1f;

	// Token: 0x040011F5 RID: 4597
	public float changeTime = 1f;

	// Token: 0x040011F6 RID: 4598
	public bool audioIgnoreModification;

	// Token: 0x040011F7 RID: 4599
	private bool audioSpeedModifierSet;

	// Token: 0x040011F8 RID: 4600
	private float speedFrac;

	// Token: 0x040011F9 RID: 4601
	private bool speedTriggerActive;
}
