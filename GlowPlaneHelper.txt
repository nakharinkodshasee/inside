using System;
using UnityEngine;

// Token: 0x0200065B RID: 1627
public class GlowPlaneHelper : MonoBehaviour
{
	// Token: 0x0600280A RID: 10250 RVA: 0x001426D0 File Offset: 0x001408D0
	private void OnEnable()
	{
		this.mi = base.gameObject.GetComponent<MaterialInstance>();
		if (this.mi == null)
		{
			this.mi = base.gameObject.AddComponent<MaterialInstance>();
		}
		this.colorProperty = this.mi.GetOrAddColorProperty("_Color");
		this.mi.SetColorProperty(this.colorProperty, this.GlowColorMin);
		if (this.watchObject == null)
		{
			this.watchObject = base.gameObject;
		}
	}

	// Token: 0x0600280B RID: 10251 RVA: 0x0014275C File Offset: 0x0014095C
	private void FixedUpdate()
	{
		Vector3 vector = Camera.main.transform.position - base.gameObject.transform.position;
		this.helperRot = this.watchObject.transform.forward;
		this.helperAngle = Vector3.Angle(vector, this.helperRot) - 90f;
		float num = Mathf.Clamp01(-1f * (this.helperAngle * 0.017453292f));
		num = this.curve.Evaluate(num);
		this.mi.SetColorProperty(this.colorProperty, Color.Lerp(this.GlowColorMin, this.GlowColorMax, num));
		if (this.watchObject == null)
		{
			return;
		}
		if (this.debug)
		{
			Debug.DrawRay(this.watchObject.transform.position, this.watchObject.transform.forward);
			Debug.DrawRay(base.gameObject.transform.position, vector);
		}
	}

	// Token: 0x040047B1 RID: 18353
	public GameObject watchObject;

	// Token: 0x040047B2 RID: 18354
	public bool debug;

	// Token: 0x040047B3 RID: 18355
	public Color GlowColorMin = Color.black;

	// Token: 0x040047B4 RID: 18356
	public Color GlowColorMax = Color.white;

	// Token: 0x040047B5 RID: 18357
	public AnimationCurve curve;

	// Token: 0x040047B6 RID: 18358
	private MaterialInstance mi;

	// Token: 0x040047B7 RID: 18359
	private MaterialInstance.ColorProperty colorProperty;

	// Token: 0x040047B8 RID: 18360
	private Vector3 helperRot;

	// Token: 0x040047B9 RID: 18361
	private float helperAngle;
}