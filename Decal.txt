using System;
using UnityEngine;

// Token: 0x02000002 RID: 2
public class Decal : MonoBehaviour
{
	// Token: 0x06000002 RID: 2 RVA: 0x00002150 File Offset: 0x00000350
	private void OnAwake()
	{
		this.oldMatrix = base.transform.localToWorldMatrix;
		this.oldScale = base.transform.localScale;
	}

	// Token: 0x06000003 RID: 3 RVA: 0x00002180 File Offset: 0x00000380
	private void OnDrawGizmosSelected()
	{
		Gizmos.matrix = base.transform.localToWorldMatrix;
		Gizmos.DrawWireCube(Vector3.zero, Vector3.one);
	}

	// Token: 0x06000004 RID: 4 RVA: 0x000021AC File Offset: 0x000003AC
	public Bounds GetBounds()
	{
		Vector3 lossyScale = base.transform.lossyScale;
		Vector3 vector = -lossyScale / 2f;
		Vector3 vector2 = lossyScale / 2f;
		Vector3[] array = new Vector3[]
		{
			new Vector3(vector.x, vector.y, vector.z),
			new Vector3(vector2.x, vector.y, vector.z),
			new Vector3(vector.x, vector2.y, vector.z),
			new Vector3(vector2.x, vector2.y, vector.z),
			new Vector3(vector.x, vector.y, vector2.z),
			new Vector3(vector2.x, vector.y, vector2.z),
			new Vector3(vector.x, vector2.y, vector2.z),
			new Vector3(vector2.x, vector2.y, vector2.z)
		};
		for (int i = 0; i < 8; i++)
		{
			array[i] = base.transform.TransformDirection(array[i]);
		}
		vector2 = (vector = array[0]);
		foreach (Vector3 vector3 in array)
		{
			vector = Vector3.Min(vector, vector3);
			vector2 = Vector3.Max(vector2, vector3);
		}
		return new Bounds(base.transform.position, vector2 - vector);
	}

	// Token: 0x04000001 RID: 1
	public Material material;

	// Token: 0x04000002 RID: 2
	public Sprite sprite;

	// Token: 0x04000003 RID: 3
	public float maxAngle = 90f;

	// Token: 0x04000004 RID: 4
	public float pushDistance = 0.001f;

	// Token: 0x04000005 RID: 5
	public float buildPrecision = 0.01f;

	// Token: 0x04000006 RID: 6
	public Vector2 croppingOffsetX = Vector2.zero;

	// Token: 0x04000007 RID: 7
	public Vector2 croppingOffsetY = Vector2.zero;

	// Token: 0x04000008 RID: 8
	public Vector2 croppingOffsetZ = Vector2.zero;

	// Token: 0x04000009 RID: 9
	public bool manualUpdate;

	// Token: 0x0400000A RID: 10
	public Matrix4x4 oldMatrix;

	// Token: 0x0400000B RID: 11
	public Vector3 oldScale;

	// Token: 0x0400000C RID: 12
	public LayerMask affectedLayers = 1;

	// Token: 0x0400000D RID: 13
	public bool forceSpriteAspectRatio;
}