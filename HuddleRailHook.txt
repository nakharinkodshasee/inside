using System;
using UnityEngine;

// Token: 0x0200058A RID: 1418
public class HuddleRailHook : MonoBehaviour
{
	// Token: 0x06002461 RID: 9313 RVA: 0x0012C220 File Offset: 0x0012A420
	private void Start()
	{
		this.huddle = ScriptGlobals.huddle;
	}

	// Token: 0x06002462 RID: 9314 RVA: 0x0012C230 File Offset: 0x0012A430
	private void FixedUpdate()
	{
		Vector3 vector = base.GetComponent<Rigidbody>().velocity;
		if (this.huddle.grabState.body == this.grab.GetComponent<Rigidbody>())
		{
			this.huddleGrabbing = true;
			vector *= -this.friction;
			base.GetComponent<Rigidbody>().AddForce(vector, 0);
		}
		else
		{
			this.huddleGrabbing = false;
			if (this.returnPos != null)
			{
				float num = Vector3.Distance(this.returnPos.transform.position, base.transform.position);
				if (num > 3f)
				{
					if (base.GetComponent<Rigidbody>().velocity.x > -5.5f)
					{
						base.GetComponent<Rigidbody>().AddForce(-this.returnForce, 0f, 0f, 0);
					}
				}
				else
				{
					vector *= -1f;
					base.GetComponent<Rigidbody>().AddForce(vector, 0);
				}
			}
			else
			{
				vector *= -this.friction;
				base.GetComponent<Rigidbody>().AddForce(vector, 0);
			}
		}
	}

	// Token: 0x040042BC RID: 17084
	public GameObject grab;

	// Token: 0x040042BD RID: 17085
	public GameObject returnPos;

	// Token: 0x040042BE RID: 17086
	public float friction = 0.01f;

	// Token: 0x040042BF RID: 17087
	public float returnForce = 0.6f;

	// Token: 0x040042C0 RID: 17088
	private bool huddleGrabbing;

	// Token: 0x040042C1 RID: 17089
	private Huddle huddle;
}