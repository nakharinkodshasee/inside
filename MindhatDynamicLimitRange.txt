using System;
using UnityEngine;

// Token: 0x0200040C RID: 1036
public class MindhatDynamicLimitRange : MonoBehaviour
{
	// Token: 0x06001B40 RID: 6976 RVA: 0x000EDEBC File Offset: 0x000EC0BC
	private void FixedUpdate()
	{
		float x = this.limitController.transform.position.x;
		float num = Mathf.InverseLerp(this.minLimit.position.x, this.maxLimit.position.x, x);
		this.limitController.maxDistance = Mathf.Lerp(this.minLimitValue, this.maxLimitValue, num);
		if (Mathf.Sign(x - this.door.position.x) != Mathf.Sign(ScriptGlobals.camera.transform.position.x - this.door.position.x))
		{
			this.limitController.maxDistance = this.otherSideOfDoorValue;
		}
		if (Mathf.Sign(x - this.door2.position.x) != Mathf.Sign(ScriptGlobals.camera.transform.position.x - this.door2.position.x))
		{
			this.limitController.maxDistance = this.otherSideOfDoorValue;
		}
		else if (x > this.door2.position.x)
		{
			this.limitController.maxDistance = this.maxLimitAtFinalPuzzleRoom;
		}
	}

	// Token: 0x04003155 RID: 12629
	public MindHatLimitControl limitController;

	// Token: 0x04003156 RID: 12630
	public Transform minLimit;

	// Token: 0x04003157 RID: 12631
	public Transform maxLimit;

	// Token: 0x04003158 RID: 12632
	public Transform door;

	// Token: 0x04003159 RID: 12633
	public Transform door2;

	// Token: 0x0400315A RID: 12634
	public float minLimitValue = 5.5f;

	// Token: 0x0400315B RID: 12635
	public float maxLimitValue = 10f;

	// Token: 0x0400315C RID: 12636
	public float otherSideOfDoorValue = 4f;

	// Token: 0x0400315D RID: 12637
	public float maxLimitAtFinalPuzzleRoom = 9f;
}
