using System;
using System.Collections.Generic;
using UnityEngine;

// Token: 0x020004D7 RID: 1239
public class MineExitSandDebrisAudio : MonoBehaviour, IPreAwake
{
	// Token: 0x06002078 RID: 8312 RVA: 0x00112664 File Offset: 0x00110864
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.akGameObjList = new AkGameObj[this.sandEmitters.Count];
		int i = 0;
		int count = this.sandEmitters.Count;
		while (i < count)
		{
			this.akGameObjList[i] = AudioUtils.EnsureAkGameObj(this.sandEmitters[i].gameObject, null);
			i++;
		}
		this.audioStart = new AudioEventSimple(this.startEvt);
		this.audioStop = new AudioEventSimple(this.stopEvt);
		int j = 0;
		int count2 = this.timers.Count;
		while (j < count2)
		{
			this.timers[j] = 0f;
			j++;
		}
		this.preProcessed = true;
	}

	// Token: 0x06002079 RID: 8313 RVA: 0x00112728 File Offset: 0x00110928
	public bool PreAwake(int callcount)
	{
		if (!this.preProcessed)
		{
			this.OnPreProcess();
		}
		this.blow = SignalIn.Create("blow", base.gameObject, new Action(this.DoBlowEvent));
		return true;
	}

	// Token: 0x0600207A RID: 8314 RVA: 0x0011276C File Offset: 0x0011096C
	private void DoBlowEvent()
	{
		int i = 0;
		int count = this.sandEmitters.Count;
		while (i < count)
		{
			this.audioStart.PostFast(this.akGameObjList[i]);
			this.timers[i] = Random.Range(this.runTimeMin, this.runTimeMax);
			i++;
		}
	}

	// Token: 0x0600207B RID: 8315 RVA: 0x001127C8 File Offset: 0x001109C8
	private void Update()
	{
		if (this.timers.Count <= 0 || this.sandEmitters.Count <= 0)
		{
			return;
		}
		int i = 0;
		int count = this.sandEmitters.Count;
		while (i < count)
		{
			float num = this.timers[i];
			if (num > 0f)
			{
				num -= Time.deltaTime;
				if (num <= 0f)
				{
					this.audioStop.PostFast(this.akGameObjList[i]);
				}
				this.timers[i] = num;
			}
			i++;
		}
	}

	// Token: 0x04003C2F RID: 15407
	public float runTimeMin = 3f;

	// Token: 0x04003C30 RID: 15408
	public float runTimeMax = 5.5f;

	// Token: 0x04003C31 RID: 15409
	public string startEvt = "env_mines_sandFall";

	// Token: 0x04003C32 RID: 15410
	public string stopEvt = "env_mines_sandHit";

	// Token: 0x04003C33 RID: 15411
	public List<Transform> sandEmitters;

	// Token: 0x04003C34 RID: 15412
	public List<float> timers;

	// Token: 0x04003C35 RID: 15413
	private SignalIn blow;

	// Token: 0x04003C36 RID: 15414
	[SerializeField]
	[HideInInspector]
	private bool preProcessed;

	// Token: 0x04003C37 RID: 15415
	[HideInInspector]
	[SerializeField]
	private AudioEventSimple audioStart;

	// Token: 0x04003C38 RID: 15416
	[SerializeField]
	[HideInInspector]
	private AudioEventSimple audioStop;

	// Token: 0x04003C39 RID: 15417
	[SerializeField]
	[HideInInspector]
	private AkGameObj[] akGameObjList;
}
