using System;
using UnityEngine;

// Token: 0x020005BD RID: 1469
public class ClockLogic : MonoBehaviour
{
	// Token: 0x06002566 RID: 9574 RVA: 0x001327B0 File Offset: 0x001309B0
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		AkGameObj akGameObj = AudioUtils.EnsureAkGameObj(base.gameObject, null);
		this.audioMin = new AudioEventSimpleLocal(this.audioPrefix + "_clockMin", akGameObj);
		this.audioHour = new AudioEventSimpleLocal(this.audioPrefix + "_clockHour", akGameObj);
	}

	// Token: 0x06002567 RID: 9575 RVA: 0x00132818 File Offset: 0x00130A18
	private void OnEnable()
	{
		this.refreshTimer = 0f;
	}

	// Token: 0x06002568 RID: 9576 RVA: 0x00132828 File Offset: 0x00130A28
	private void Start()
	{
		this.OnPreProcess();
		DateTime now = DateTime.Now;
		this.previousMin = now.Minute;
		this.previousHour = now.Hour;
	}

	// Token: 0x06002569 RID: 9577 RVA: 0x0013285C File Offset: 0x00130A5C
	private void FixedUpdate()
	{
		this.refreshTimer -= Time.deltaTime;
		if (this.refreshTimer <= 0f)
		{
			DateTime now = DateTime.Now;
			this.SetCurrentTime(now.Hour, now.Minute);
			this.refreshTimer = this.refreshDelay;
		}
	}

	// Token: 0x0600256A RID: 9578 RVA: 0x001328B4 File Offset: 0x00130AB4
	private void SetCurrentTime(int hour, int min)
	{
		if (min != this.previousMin)
		{
			this.audioMin.PostFast();
		}
		Vector3 localEulerAngles = this.minutesIndicator.localEulerAngles;
		localEulerAngles.z = (float)min * 6f;
		this.minutesIndicator.localEulerAngles = -localEulerAngles;
		if (hour != this.previousHour)
		{
			this.audioHour.PostFast();
		}
		Vector3 localEulerAngles2 = this.hourIndicator.localEulerAngles;
		localEulerAngles2.z = ((float)hour + (float)min / 60f) * 30f;
		this.hourIndicator.localEulerAngles = -localEulerAngles2;
		this.previousMin = min;
		this.previousHour = hour;
	}

	// Token: 0x0400446D RID: 17517
	public Transform hourIndicator;

	// Token: 0x0400446E RID: 17518
	public Transform minutesIndicator;

	// Token: 0x0400446F RID: 17519
	public string audioPrefix;

	// Token: 0x04004470 RID: 17520
	private float refreshTimer;

	// Token: 0x04004471 RID: 17521
	private float refreshDelay = 1f;

	// Token: 0x04004472 RID: 17522
	private int previousMin;

	// Token: 0x04004473 RID: 17523
	private int previousHour;

	// Token: 0x04004474 RID: 17524
	[SerializeField]
	[HideInInspector]
	private AudioEventSimpleLocal audioMin;

	// Token: 0x04004475 RID: 17525
	[HideInInspector]
	[SerializeField]
	private AudioEventSimpleLocal audioHour;

	// Token: 0x04004476 RID: 17526
	[SerializeField]
	[HideInInspector]
	private bool preProcessed;
}
