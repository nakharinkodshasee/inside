using System;
using UnityEngine;

// Token: 0x02000275 RID: 629
public class WaterStreamHuddle : MonoBehaviour, IPreAwake
{
	// Token: 0x06001358 RID: 4952 RVA: 0x000B64BC File Offset: 0x000B46BC
	public bool PreAwake(int callcount)
	{
		this.activate = SignalIn.Create("activate", base.gameObject, new Action(this.OnActivate));
		this.deactivate = SignalIn.Create("deactivate", base.gameObject, new Action(this.OnDeactivate));
		return true;
	}

	// Token: 0x06001359 RID: 4953 RVA: 0x000B6510 File Offset: 0x000B4710
	private void FixedUpdate()
	{
		if (!this.isActive)
		{
			return;
		}
		if (this.target)
		{
			this.currentDirection = this.target.position - this.huddle.pos3;
			this.currentDirection.Normalize();
		}
		else
		{
			this.currentDirection = this.direction.normalized;
		}
		this.bones = ScriptGlobals.huddle.cloth.bones;
		int i = 0;
		int num = this.bones.Length;
		while (i < num)
		{
			Rigidbody body = this.bones[i].body;
			body.AddForce(this.currentDirection * Time.deltaTime * this.streamStrength, 0);
			i++;
		}
	}

	// Token: 0x0600135A RID: 4954 RVA: 0x000B65DC File Offset: 0x000B47DC
	private void OnActivate()
	{
		this.isActive = true;
	}

	// Token: 0x0600135B RID: 4955 RVA: 0x000B65E8 File Offset: 0x000B47E8
	private void OnDeactivate()
	{
		this.isActive = false;
	}

	// Token: 0x040023AB RID: 9131
	public Transform target;

	// Token: 0x040023AC RID: 9132
	public Vector3 direction;

	// Token: 0x040023AD RID: 9133
	public float streamStrength;

	// Token: 0x040023AE RID: 9134
	public bool isActive;

	// Token: 0x040023AF RID: 9135
	private Huddle huddle;

	// Token: 0x040023B0 RID: 9136
	private HuddleCloth.ClothBone[] bones;

	// Token: 0x040023B1 RID: 9137
	private Vector3 currentDirection;

	// Token: 0x040023B2 RID: 9138
	private SignalIn activate;

	// Token: 0x040023B3 RID: 9139
	private SignalIn deactivate;
}