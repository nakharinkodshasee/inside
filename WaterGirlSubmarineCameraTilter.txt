using System;
using UnityEngine;

// Token: 0x020000DC RID: 220
public class WaterGirlSubmarineCameraTilter : MonoBehaviour, IPreAwake
{
	// Token: 0x060006DB RID: 1755 RVA: 0x0004D724 File Offset: 0x0004B924
	public bool PreAwake(int callcount)
	{
		this.girlAttachedToSub = SignalIn.Create("girlAttachedToSub", base.gameObject, delegate
		{
			this.deathCamActive = true;
		});
		return true;
	}

	// Token: 0x060006DC RID: 1756 RVA: 0x0004D74C File Offset: 0x0004B94C
	private void Start()
	{
		this.cameraBox = base.gameObject.GetComponent<CameraBlendBox>();
		this.startCamPos = this.cameraBox.positionCamera;
	}

	// Token: 0x060006DD RID: 1757 RVA: 0x0004D77C File Offset: 0x0004B97C
	private void Update()
	{
		float num = 0f;
		if (this.deathCamActive)
		{
			this.deathTimer += Time.deltaTime;
			num = this.deathCurve.Evaluate(this.deathTimer);
		}
		Vector3 vector = this.girl.transform.position - ScriptGlobals.boy.transform.position;
		vector.z = 0f;
		float magnitude = vector.magnitude;
		vector.Normalize();
		float num2 = Mathf.Atan2(vector.y, vector.x);
		vector.x = Mathf.Cos(num2);
		vector.y = Mathf.Sin(num2);
		this.cameraBox.positionAim = vector * Mathf.Lerp(0f, this.aimAmount, Mathf.InverseLerp(1f, this.maxDist, magnitude));
		this.cameraBox.positionCamera = this.startCamPos - Vector3.forward * Mathf.Lerp(0f, 2f, Mathf.InverseLerp(1f, this.maxDist, magnitude)) + Vector3.forward * num * this.zoomInOnDeathAmount;
	}

	// Token: 0x04000BDF RID: 3039
	public float aimAmount;

	// Token: 0x04000BE0 RID: 3040
	public float maxDist = 10f;

	// Token: 0x04000BE1 RID: 3041
	public Transform girl;

	// Token: 0x04000BE2 RID: 3042
	public float zoomInOnDeathAmount = 2f;

	// Token: 0x04000BE3 RID: 3043
	public AnimationCurve deathCurve;

	// Token: 0x04000BE4 RID: 3044
	private CameraBlendBox cameraBox;

	// Token: 0x04000BE5 RID: 3045
	private Vector3 startCamPos;

	// Token: 0x04000BE6 RID: 3046
	private SignalIn girlAttachedToSub;

	// Token: 0x04000BE7 RID: 3047
	private bool deathCamActive;

	// Token: 0x04000BE8 RID: 3048
	private float deathTimer;
}