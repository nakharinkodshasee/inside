using System;
using System.Collections;
using System.Collections.Generic;
using System.IO;
using System.Xml.Linq;
using UnityEngine;

// Token: 0x020004B7 RID: 1207
public class AlbinosInCagePersistentData : MonoBehaviour, IFastEventExListener<SavepointManager.SavepointIndex>, IPreAwake
{
	// Token: 0x1700008E RID: 142
	// (get) Token: 0x06001FA1 RID: 8097 RVA: 0x0010DCDC File Offset: 0x0010BEDC
	// (set) Token: 0x06001FA2 RID: 8098 RVA: 0x0010DCE4 File Offset: 0x0010BEE4
	public AlbinosInCagePersistentData.AlbinosState current { get; set; }

	// Token: 0x06001FA3 RID: 8099 RVA: 0x0010DCF0 File Offset: 0x0010BEF0
	public bool PreAwake(int callcount)
	{
		this.cageIsUp = SignalOut.Create("cageIsUp", base.gameObject);
		this.cageIsDownWithAlbinos = SignalOut.Create("cageIsDownWithAlbinos", base.gameObject);
		this.cageIsDownWithOutAlbinos = SignalOut.Create("cageIsDownWithOutAlbinos", base.gameObject);
		this.pushCageDown = SignalIn.Create("pushCageDown", base.gameObject, new Action(this.SetPushCageDown));
		this.pickAlbinosUp = SignalIn.Create("pickAlbinosUp", base.gameObject, new Action(this.SetPickAlbinosUp));
		this.loadCompleted = SignalIn.Create("loadCompleted", base.gameObject, new Action(this.DoLoadCompleted));
		return true;
	}

	// Token: 0x06001FA4 RID: 8100 RVA: 0x0010DDA8 File Offset: 0x0010BFA8
	private void Awake()
	{
		Savegame.savepointSaved.Register(this, ref this.savepointSavedHandle);
		AlbinosInCagePersistentData.PersistentData persistentData = PersistentDataManager.Get<AlbinosInCagePersistentData.PersistentData>(this.uniqueID, () => new AlbinosInCagePersistentData.PersistentData());
		this.current = persistentData.value;
		this.SetCorrectInternalState();
	}

	// Token: 0x06001FA5 RID: 8101 RVA: 0x0010DE04 File Offset: 0x0010C004
	private void SetCorrectInternalState()
	{
		if (this.current == AlbinosInCagePersistentData.AlbinosState.CageUp)
		{
			this.cageAndAlbinosState = 0;
		}
		else if (this.current == AlbinosInCagePersistentData.AlbinosState.CageDown)
		{
			this.cageAndAlbinosState = 1;
		}
		else if (this.current == AlbinosInCagePersistentData.AlbinosState.AlbinosPickedUp)
		{
			this.cageAndAlbinosState = 2;
		}
	}

	// Token: 0x06001FA6 RID: 8102 RVA: 0x0010DE54 File Offset: 0x0010C054
	private void OnDestroy()
	{
		Savegame.savepointSaved.Unregister(ref this.savepointSavedHandle);
	}

	// Token: 0x06001FA7 RID: 8103 RVA: 0x0010DE68 File Offset: 0x0010C068
	private IEnumerator Start()
	{
		yield return null;
		yield return null;
		this.GetValueAndRaiseSignal();
		yield break;
	}

	// Token: 0x06001FA8 RID: 8104 RVA: 0x0010DE84 File Offset: 0x0010C084
	private void SetPushCageDown()
	{
		this.cageAndAlbinosState = 1;
	}

	// Token: 0x06001FA9 RID: 8105 RVA: 0x0010DE90 File Offset: 0x0010C090
	private void SetPickAlbinosUp()
	{
		this.cageAndAlbinosState = 2;
	}

	// Token: 0x06001FAA RID: 8106 RVA: 0x0010DE9C File Offset: 0x0010C09C
	private void DoLoadCompleted()
	{
		this.current = AlbinosInCagePersistentData.AlbinosState.AlbinosPickedUp;
		this.cageAndAlbinosState = 2;
		this.pushableCage.SetActive(false);
		this.trashedCage.SetActive(true);
		this.cageIsDownWithOutAlbinos.Signal();
	}

	// Token: 0x06001FAB RID: 8107 RVA: 0x0010DED0 File Offset: 0x0010C0D0
	private void GetValueAndRaiseSignal()
	{
		if (this.current == AlbinosInCagePersistentData.AlbinosState.CageUp)
		{
			this.cageIsUp.Signal();
		}
		else if (this.current == AlbinosInCagePersistentData.AlbinosState.CageDown)
		{
			this.pushableCage.SetActive(false);
			this.trashedCage.SetActive(true);
			int i = 0;
			int count = this.AlbinosInCage.Count;
			while (i < count)
			{
				this.AlbinosInCage[i].OnDisableAlbino();
				i++;
			}
			this.cageIsDownWithAlbinos.Signal();
		}
		else if (this.current == AlbinosInCagePersistentData.AlbinosState.AlbinosPickedUp)
		{
			this.pushableCage.SetActive(false);
			this.trashedCage.SetActive(true);
			this.cageIsDownWithOutAlbinos.Signal();
		}
	}

	// Token: 0x06001FAC RID: 8108 RVA: 0x0010DF8C File Offset: 0x0010C18C
	public void OnFastEventEx(FastEventEx<SavepointManager.SavepointIndex> sender, ref SavepointManager.SavepointIndex indices)
	{
		if (sender == Savegame.savepointSaved)
		{
			if (this.cageAndAlbinosState == 0)
			{
				this.current = AlbinosInCagePersistentData.AlbinosState.CageUp;
			}
			else if (this.cageAndAlbinosState == 1)
			{
				this.current = AlbinosInCagePersistentData.AlbinosState.CageDown;
			}
			else if (this.cageAndAlbinosState == 2)
			{
				this.current = AlbinosInCagePersistentData.AlbinosState.AlbinosPickedUp;
			}
			AlbinosInCagePersistentData.PersistentData persistentData = PersistentDataManager.Get<AlbinosInCagePersistentData.PersistentData>(this.uniqueID, () => new AlbinosInCagePersistentData.PersistentData());
			persistentData.value = this.current;
		}
	}

	// Token: 0x04003A9F RID: 15007
	public string uniqueID;

	// Token: 0x04003AA0 RID: 15008
	public GameObject pushableCage;

	// Token: 0x04003AA1 RID: 15009
	public GameObject trashedCage;

	// Token: 0x04003AA2 RID: 15010
	public List<AlbinoInCageAI> AlbinosInCage;

	// Token: 0x04003AA3 RID: 15011
	public List<AlbinoSpawner> AlbinosAtCage;

	// Token: 0x04003AA4 RID: 15012
	private int cageAndAlbinosState;

	// Token: 0x04003AA5 RID: 15013
	private SignalOut cageIsUp;

	// Token: 0x04003AA6 RID: 15014
	private SignalOut cageIsDownWithAlbinos;

	// Token: 0x04003AA7 RID: 15015
	private SignalOut cageIsDownWithOutAlbinos;

	// Token: 0x04003AA8 RID: 15016
	private SignalIn pushCageDown;

	// Token: 0x04003AA9 RID: 15017
	private SignalIn pickAlbinosUp;

	// Token: 0x04003AAA RID: 15018
	private SignalIn loadCompleted;

	// Token: 0x04003AAB RID: 15019
	private int savepointSavedHandle = -1;

	// Token: 0x020004B8 RID: 1208
	public enum AlbinosState
	{
		// Token: 0x04003AB0 RID: 15024
		CageUp,
		// Token: 0x04003AB1 RID: 15025
		CageDown,
		// Token: 0x04003AB2 RID: 15026
		AlbinosPickedUp
	}

	// Token: 0x020004B9 RID: 1209
	public class PersistentData : IPersistentData
	{
		// Token: 0x06001FB0 RID: 8112 RVA: 0x0010E034 File Offset: 0x0010C234
		public void Unserialize(BinaryReader reader)
		{
			this.value = (AlbinosInCagePersistentData.AlbinosState)reader.ReadInt32();
		}

		// Token: 0x06001FB1 RID: 8113 RVA: 0x0010E044 File Offset: 0x0010C244
		public void Serialize(BinaryWriter writer)
		{
			writer.Write((int)this.value);
		}

		// Token: 0x06001FB2 RID: 8114 RVA: 0x0010E054 File Offset: 0x0010C254
		public void Serialize(XElement element)
		{
			int num = (int)this.value;
			element.Value = num.ToString();
		}

		// Token: 0x06001FB3 RID: 8115 RVA: 0x0010E078 File Offset: 0x0010C278
		public void Unserialize(XElement element)
		{
			this.value = (AlbinosInCagePersistentData.AlbinosState)int.Parse(element.Value);
		}

		// Token: 0x06001FB4 RID: 8116 RVA: 0x0010E08C File Offset: 0x0010C28C
		public int GetHash()
		{
			return this.value.GetHashCode();
		}

		// Token: 0x04003AB3 RID: 15027
		public AlbinosInCagePersistentData.AlbinosState value;
	}
}
