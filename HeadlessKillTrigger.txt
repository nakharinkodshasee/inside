using System;
using UnityEngine;

// Token: 0x020004CA RID: 1226
public class HeadlessKillTrigger : MonoBehaviour, IFastEventListener, IFastEventExListener<Collider>, IPreAwake
{
	// Token: 0x0600200E RID: 8206 RVA: 0x00110000 File Offset: 0x0010E200
	[LateProcessBuild(0)]
	private void OnPreProcess()
	{
		if (this.preProcessed)
		{
			return;
		}
		this.preProcessed = true;
		this.coverTriggerEvents = this.coverTrigger.GetComponent<CollisionEvents>();
		if (!this.coverTriggerEvents)
		{
			this.coverTriggerEvents = this.coverTrigger.AddComponent<CollisionEvents>();
		}
		this.audioCoverExit = new AudioEventSimple("boy_impulse_cover_exit");
		this.audioCoverEnter = new AudioEventSimple("boy_impulse_cover_enter");
		this.audioCoverDeath = new AudioEventSimple("boy_impulse_cover_death");
	}

	// Token: 0x0600200F RID: 8207 RVA: 0x00110084 File Offset: 0x0010E284
	public bool PreAwake(int callcount)
	{
		this.activate = SignalIn.Create("activate", base.gameObject, new Action(this.OnActivate));
		this.deactivate = SignalIn.Create("deactivate", base.gameObject, new Action(this.OnDeactivate));
		return true;
	}

	// Token: 0x06002010 RID: 8208 RVA: 0x001100D8 File Offset: 0x0010E2D8
	private void Start()
	{
		this.OnPreProcess();
		ForcePushManager.blowEvent.Register(this, ref this.blowHandle);
		this.coverTriggerEvents.enterTrigger.Register(this, ref this.coverTriggerEnterHandle);
		this.coverTriggerEvents.exitTrigger.Register(this, ref this.coverTriggerExitHandle);
	}

	// Token: 0x06002011 RID: 8209 RVA: 0x0011012C File Offset: 0x0010E32C
	private void OnDestroy()
	{
		ForcePushManager.blowEvent.Unregister(ref this.blowHandle);
	}

	// Token: 0x06002012 RID: 8210 RVA: 0x00110140 File Offset: 0x0010E340
	public void OnFastEvent(FastEvent sender)
	{
		if (sender == ForcePushManager.blowEvent && this.isActive && this.boyInside && !this.killInitialised)
		{
			this.killInitialised = true;
		}
	}

	// Token: 0x06002013 RID: 8211 RVA: 0x00110178 File Offset: 0x0010E378
	public void OnFastEventEx(FastEventEx<Collider> sender, ref Collider collider)
	{
		if (sender == this.coverTriggerEvents.enterTrigger)
		{
			this.CoverTriggerEntered(collider);
		}
		else if (sender == this.coverTriggerEvents.exitTrigger)
		{
			this.CoverTriggerExited(collider);
		}
	}

	// Token: 0x06002014 RID: 8212 RVA: 0x001101B4 File Offset: 0x0010E3B4
	private void FixedUpdate()
	{
		if (this.killInitialised && this.killTimer > 0f)
		{
			this.killTimer -= LevelGlobals.forcePushManager.musicDeltaTime;
			if (this.killTimer <= 0f)
			{
				this.Kill();
			}
		}
	}

	// Token: 0x06002015 RID: 8213 RVA: 0x0011020C File Offset: 0x0010E40C
	private void CoverTriggerEntered(Collider c)
	{
		BoyProbe component = c.GetComponent<BoyProbe>();
		if (component)
		{
			this.insideCoverTrigger = true;
		}
	}

	// Token: 0x06002016 RID: 8214 RVA: 0x00110234 File Offset: 0x0010E434
	private void CoverTriggerExited(Collider c)
	{
		BoyProbe component = c.GetComponent<BoyProbe>();
		if (component)
		{
			this.insideCoverTrigger = false;
		}
	}

	// Token: 0x06002017 RID: 8215 RVA: 0x0011025C File Offset: 0x0010E45C
	private void Kill()
	{
		ForcePushManager forcePushManager = LevelGlobals.forcePushManager;
		this.audioCoverDeath.PostFast(AudioKeyObject.AkGameObjs.global);
		if (forcePushManager != null)
		{
			forcePushManager.KillHeadless();
		}
	}

	// Token: 0x06002018 RID: 8216 RVA: 0x00110294 File Offset: 0x0010E494
	private void OnTriggerEnter(Collider c)
	{
		BoyProbe component = c.GetComponent<BoyProbe>();
		if (component)
		{
			if (this.insideCoverTrigger && !component.boy.isDead)
			{
				this.audioCoverExit.PostFast(AudioKeyObject.AkGameObjs.global);
			}
			this.boyInside = true;
		}
	}

	// Token: 0x06002019 RID: 8217 RVA: 0x001102E8 File Offset: 0x0010E4E8
	private void OnTriggerExit(Collider c)
	{
		BoyProbe component = c.GetComponent<BoyProbe>();
		if (component)
		{
			if (this.insideCoverTrigger && !component.boy.isDead && !this.killInitialised)
			{
				this.audioCoverEnter.PostFast(AudioKeyObject.AkGameObjs.global);
			}
			this.boyInside = false;
		}
	}

	// Token: 0x0600201A RID: 8218 RVA: 0x00110344 File Offset: 0x0010E544
	private void OnDeactivate()
	{
		this.isActive = false;
	}

	// Token: 0x0600201B RID: 8219 RVA: 0x00110350 File Offset: 0x0010E550
	private void OnActivate()
	{
		this.isActive = true;
	}

	// Token: 0x04003B71 RID: 15217
	public bool isActive;

	// Token: 0x04003B72 RID: 15218
	public GameObject coverTrigger;

	// Token: 0x04003B73 RID: 15219
	private SignalIn activate;

	// Token: 0x04003B74 RID: 15220
	private SignalIn deactivate;

	// Token: 0x04003B75 RID: 15221
	private bool boyInside;

	// Token: 0x04003B76 RID: 15222
	private bool killInitialised;

	// Token: 0x04003B77 RID: 15223
	private float killTimer = 0.07f;

	// Token: 0x04003B78 RID: 15224
	private bool insideCoverTrigger;

	// Token: 0x04003B79 RID: 15225
	private int blowHandle = -1;

	// Token: 0x04003B7A RID: 15226
	private int coverTriggerEnterHandle = -1;

	// Token: 0x04003B7B RID: 15227
	private int coverTriggerExitHandle = -1;

	// Token: 0x04003B7C RID: 15228
	[HideInInspector]
	[SerializeField]
	private AudioEventSimple audioCoverExit;

	// Token: 0x04003B7D RID: 15229
	[HideInInspector]
	[SerializeField]
	private AudioEventSimple audioCoverEnter;

	// Token: 0x04003B7E RID: 15230
	[HideInInspector]
	[SerializeField]
	private AudioEventSimple audioCoverDeath;

	// Token: 0x04003B7F RID: 15231
	[SerializeField]
	[HideInInspector]
	private CollisionEvents coverTriggerEvents;

	// Token: 0x04003B80 RID: 15232
	[SerializeField]
	[HideInInspector]
	private bool preProcessed;
}