using System;
using System.Collections.Generic;
using UnityEngine;

// Token: 0x020005DB RID: 1499
public class addForceWithinTrigger : MonoBehaviour, IPreAwake
{
	// Token: 0x060025EB RID: 9707 RVA: 0x00135364 File Offset: 0x00133564
	public bool PreAwake(int callcount)
	{
		this.doActivate = SignalIn.Create("doActivate", base.gameObject, delegate
		{
			this.activated = true;
		});
		this.doDeactivate = SignalIn.Create("doDeactivate", base.gameObject, delegate
		{
			this.activated = false;
		});
		return true;
	}

	// Token: 0x060025EC RID: 9708 RVA: 0x001353B8 File Offset: 0x001335B8
	private void Start()
	{
		if (this.startActivated)
		{
			this.startActivated = true;
		}
	}

	// Token: 0x060025ED RID: 9709 RVA: 0x001353CC File Offset: 0x001335CC
	private void OnTriggerEnter(Collider coll)
	{
		Debug.Log("ENTER");
		if (coll.GetComponent<Rigidbody>())
		{
			this.objects.Add(coll.GetComponent<Rigidbody>());
			this.setEnterConstraints(coll.GetComponent<Rigidbody>());
		}
	}

	// Token: 0x060025EE RID: 9710 RVA: 0x00135410 File Offset: 0x00133610
	private void OnTriggerExit(Collider coll)
	{
		if (coll.GetComponent<Rigidbody>())
		{
			this.objects.Remove(coll.GetComponent<Rigidbody>());
			this.setExitConstraints(coll.GetComponent<Rigidbody>());
		}
	}

	// Token: 0x060025EF RID: 9711 RVA: 0x0013544C File Offset: 0x0013364C
	private void setEnterConstraints(Rigidbody rb)
	{
		rb.constraints = 0;
		if (this.enterLockMoveX)
		{
			rb.constraints |= 2;
		}
		if (this.enterLockMoveY)
		{
			rb.constraints |= 4;
		}
		if (this.enterLockMoveZ)
		{
			rb.constraints |= 8;
		}
		rb.constraints |= 16;
		rb.constraints |= 32;
		rb.constraints |= 64;
	}

	// Token: 0x060025F0 RID: 9712 RVA: 0x001354D8 File Offset: 0x001336D8
	private void setExitConstraints(Rigidbody rb)
	{
		rb.constraints = 0;
		rb.constraints |= 2;
		rb.constraints |= 32;
		rb.constraints |= 64;
	}

	// Token: 0x060025F1 RID: 9713 RVA: 0x00135518 File Offset: 0x00133718
	private void FixedUpdate()
	{
		if (this.activated)
		{
			foreach (Rigidbody rigidbody in this.objects)
			{
				float magnitude = rigidbody.GetComponent<Rigidbody>().velocity.magnitude;
				if (magnitude < this.stayBelowSpeed)
				{
					rigidbody.AddForce(this.force, 1);
				}
			}
		}
		else
		{
			foreach (Rigidbody rigidbody2 in this.objects)
			{
				rigidbody2.GetComponent<Rigidbody>().velocity = Vector3.zero;
			}
		}
	}

	// Token: 0x04004524 RID: 17700
	public float stayBelowSpeed;

	// Token: 0x04004525 RID: 17701
	public Vector3 force;

	// Token: 0x04004526 RID: 17702
	public bool enterLockMoveX;

	// Token: 0x04004527 RID: 17703
	public bool enterLockMoveY;

	// Token: 0x04004528 RID: 17704
	public bool enterLockMoveZ;

	// Token: 0x04004529 RID: 17705
	public bool startActivated;

	// Token: 0x0400452A RID: 17706
	private SignalIn doActivate;

	// Token: 0x0400452B RID: 17707
	private SignalIn doDeactivate;

	// Token: 0x0400452C RID: 17708
	private List<Rigidbody> objects = new List<Rigidbody>();

	// Token: 0x0400452D RID: 17709
	private bool activated;
}