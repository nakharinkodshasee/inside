using System;
using UnityEngine;

// Token: 0x02000023 RID: 35
public class AlbinosOnElevatorDeadlockFix : MonoBehaviour, IPreAwake
{
	// Token: 0x06000150 RID: 336 RVA: 0x00014A10 File Offset: 0x00012C10
	public bool PreAwake(int callcount)
	{
		this.startDeadlockFix = SignalIn.Create("startDeadlockFix", base.gameObject, new Action(this.OnStartDeadlockFix));
		return true;
	}

	// Token: 0x06000151 RID: 337 RVA: 0x00014A38 File Offset: 0x00012C38
	private void OnStartDeadlockFix()
	{
		if (this.FixNeeded())
		{
			this.fixRunning = true;
		}
	}

	// Token: 0x06000152 RID: 338 RVA: 0x00014A4C File Offset: 0x00012C4C
	private bool FixNeeded()
	{
		return true;
	}

	// Token: 0x06000153 RID: 339 RVA: 0x00014A50 File Offset: 0x00012C50
	private void SafetyTeleportAlbinos()
	{
		for (int i = 18; i <= 30; i++)
		{
			GameObject aiNode = AlbinoGroupManager.mInstance.albinos[i].aiNode;
			if (aiNode.transform.position.y > base.transform.position.y + 2f)
			{
				AlbinoAI component = aiNode.GetComponent<AlbinoAI>();
				AnimcontrolledCharacter character = component.GetCharacter();
				character.transform.position = base.transform.position + new Vector3(Random.Range(-2f, 2f), 0f, Random.Range(-1f, 1f));
				character.transform.rotation = Quaternion.Euler(0f, 90f, 0f);
				character.onGround = false;
				component.forceUpdate = true;
			}
		}
		this.fixDone = true;
	}

	// Token: 0x06000154 RID: 340 RVA: 0x00014B40 File Offset: 0x00012D40
	private void Update()
	{
		if (this.fixRunning && !this.fixDone)
		{
			float num = ScriptGlobals.boy.pos.x - base.transform.position.x;
			if (!this.fixEnableDistanceReached && num > this.boySafetyActivateDist)
			{
				this.safetyEnableTime -= Time.deltaTime;
				if (this.safetyEnableTime <= 0f || num > this.boySafetySpawnDistance)
				{
					this.fixEnableDistanceReached = true;
					this.SafetyTeleportAlbinos();
				}
			}
		}
	}

	// Token: 0x0400020C RID: 524
	public float boySafetyActivateDist = 7f;

	// Token: 0x0400020D RID: 525
	public float boySafetySpawnDistance = 19f;

	// Token: 0x0400020E RID: 526
	public float safetyEnableTime = 10f;

	// Token: 0x0400020F RID: 527
	private SignalIn startDeadlockFix;

	// Token: 0x04000210 RID: 528
	private bool fixRunning;

	// Token: 0x04000211 RID: 529
	private bool fixEnableDistanceReached;

	// Token: 0x04000212 RID: 530
	private bool fixDone;
}