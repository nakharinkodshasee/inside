using System;
using UnityEngine;

// Token: 0x0200023A RID: 570
public class torchFireSource : MonoBehaviour, IPreAwake
{
	// Token: 0x060011A0 RID: 4512 RVA: 0x000A5FF8 File Offset: 0x000A41F8
	public bool PreAwake(int callcount)
	{
		this.turnedOnByTorch = SignalOut.Create("turnedOnByTorch", base.gameObject);
		this.turnOff = SignalOut.Create("turnOff", base.gameObject);
		return true;
	}

	// Token: 0x060011A1 RID: 4513 RVA: 0x000A6034 File Offset: 0x000A4234
	private void Update()
	{
		if (!this.isStarted)
		{
			this.isStarted = true;
			if (this.startOff)
			{
				this.sourceOn = false;
				this.turnOff.Signal();
			}
		}
	}

	// Token: 0x060011A2 RID: 4514 RVA: 0x000A6068 File Offset: 0x000A4268
	private void OnTriggerEnter(Collider coll)
	{
		this.tc = null;
		if (coll.attachedRigidbody != null && coll.attachedRigidbody.GetComponent<torchControl>())
		{
			this.tc = coll.attachedRigidbody.GetComponent<torchControl>();
		}
		if (this.tc != null)
		{
			if (!this.sourceOn && this.tc.flameOn)
			{
				this.turnedOnByTorch.Signal();
				this.sourceOn = true;
			}
			else if (this.sourceOn && !this.tc.flameOn)
			{
				this.tc.turnOn();
			}
		}
	}

	// Token: 0x0400204F RID: 8271
	public bool startOff;

	// Token: 0x04002050 RID: 8272
	private bool sourceOn = true;

	// Token: 0x04002051 RID: 8273
	private SignalOut turnedOnByTorch;

	// Token: 0x04002052 RID: 8274
	private SignalOut turnOff;

	// Token: 0x04002053 RID: 8275
	private torchControl tc;

	// Token: 0x04002054 RID: 8276
	private bool isStarted;
}