using System;
using UnityEngine;

// Token: 0x02000322 RID: 802
[ExecuteInEditMode]
public class FireSpriteFader : MonoBehaviour, IPreAwake
{
	// Token: 0x0600169D RID: 5789 RVA: 0x000C6638 File Offset: 0x000C4838
	public bool PreAwake(int callcount)
	{
		this.ignite = SignalIn.Create("ignite", base.gameObject, new Action(this.Ignite));
		this.extinguish = SignalIn.Create("extinguish", base.gameObject, new Action(this.Extinguish));
		return true;
	}

	// Token: 0x0600169E RID: 5790 RVA: 0x000C668C File Offset: 0x000C488C
	private void OnEnable()
	{
		this.fadeProps = new MaterialInstance.FloatProperty[this.sprites.Length];
		for (int i = 0; i < this.sprites.Length; i++)
		{
			this.fadeProps[i] = this.sprites[i].GetOrAddFloatProperty("_Fade");
		}
		this.glowProp = this.crate.GetOrAddFloatProperty("_GlowIntensity");
		this.opacityProp = this.fireCompositor.GetOrAddFloatProperty("_Opacity");
	}

	// Token: 0x0600169F RID: 5791 RVA: 0x000C670C File Offset: 0x000C490C
	private void Update()
	{
		if (!Application.isPlaying)
		{
			for (int i = 0; i < this.sprites.Length; i++)
			{
				this.sprites[i].SetFloatProperty(this.fadeProps[i], this.fade);
			}
		}
		if (this.timer < 1f)
		{
			if (this.state == FireSpriteFader.State.Extinguishing)
			{
				this.ExtinguishingState();
			}
			else if (this.state == FireSpriteFader.State.Igniting)
			{
				this.IgnitingState();
			}
		}
	}

	// Token: 0x060016A0 RID: 5792 RVA: 0x000C6790 File Offset: 0x000C4990
	private void Ignite()
	{
		this.timer = 0f;
		this.state = FireSpriteFader.State.Igniting;
		this.fireParticles.Simulate(0f, true, false);
		this.fireParticles.Play();
		this.smokeParticles.Simulate(0f, true, false);
		this.smokeParticles.Play();
	}

	// Token: 0x060016A1 RID: 5793 RVA: 0x000C67EC File Offset: 0x000C49EC
	private void Extinguish()
	{
		this.timer = 0f;
		this.state = FireSpriteFader.State.Extinguishing;
		this.fireParticles.Stop();
	}

	// Token: 0x060016A2 RID: 5794 RVA: 0x000C680C File Offset: 0x000C4A0C
	private void IgnitingState()
	{
		this.timer += Time.deltaTime / this.igniteTime;
		float num = Mathf.Clamp01(this.timer);
		for (int i = 0; i < this.sprites.Length; i++)
		{
			this.sprites[i].SetFloatProperty(this.fadeProps[i], 1f - num);
		}
		for (int j = 0; j < this.smokeLights.Length; j++)
		{
			this.smokeLights[j].color = this.smokeLightColor * num;
		}
		for (int k = 0; k < this.fireLights.Length; k++)
		{
			this.fireLights[k].color = this.lightColor[k] * num;
		}
		this.crate.SetFloatProperty(this.glowProp, this.boxGlow * num);
		this.fireCompositor.SetFloatProperty(this.opacityProp, this.compositedOpacity * num);
	}

	// Token: 0x060016A3 RID: 5795 RVA: 0x000C6914 File Offset: 0x000C4B14
	private void ExtinguishingState()
	{
		this.timer += Time.deltaTime / this.extinguishTime;
		float num = Mathf.Clamp01(this.timer);
		for (int i = 0; i < this.sprites.Length; i++)
		{
			this.sprites[i].SetFloatProperty(this.fadeProps[i], -num);
		}
		for (int j = 0; j < this.smokeLights.Length; j++)
		{
			this.smokeLights[j].color = this.smokeLightColor * (1f - num);
		}
		for (int k = 0; k < this.fireLights.Length; k++)
		{
			this.fireLights[k].color = this.lightColor[k] * (1f - num);
		}
		this.crate.SetFloatProperty(this.glowProp, this.boxGlow * (1f - num));
		this.fireCompositor.SetFloatProperty(this.opacityProp, this.compositedOpacity * (1f - num));
	}

	// Token: 0x0400281F RID: 10271
	[Range(-1f, 1f)]
	public float fade;

	// Token: 0x04002820 RID: 10272
	[Range(0f, 1f)]
	public float boxGlow;

	// Token: 0x04002821 RID: 10273
	[Range(0f, 1f)]
	public float compositedOpacity;

	// Token: 0x04002822 RID: 10274
	[Range(0f, 4f)]
	public float igniteTime;

	// Token: 0x04002823 RID: 10275
	[Range(0f, 4f)]
	public float extinguishTime;

	// Token: 0x04002824 RID: 10276
	public MaterialInstance[] sprites;

	// Token: 0x04002825 RID: 10277
	public MaterialInstance crate;

	// Token: 0x04002826 RID: 10278
	public MaterialInstance fireCompositor;

	// Token: 0x04002827 RID: 10279
	public Color smokeLightColor;

	// Token: 0x04002828 RID: 10280
	public Color[] lightColor;

	// Token: 0x04002829 RID: 10281
	public Light[] fireLights;

	// Token: 0x0400282A RID: 10282
	public SmokeLight[] smokeLights;

	// Token: 0x0400282B RID: 10283
	public ParticleSystem fireParticles;

	// Token: 0x0400282C RID: 10284
	public ParticleSystem smokeParticles;

	// Token: 0x0400282D RID: 10285
	private SignalIn ignite;

	// Token: 0x0400282E RID: 10286
	private SignalIn extinguish;

	// Token: 0x0400282F RID: 10287
	private FireSpriteFader.State state;

	// Token: 0x04002830 RID: 10288
	private MaterialInstance.FloatProperty[] fadeProps;

	// Token: 0x04002831 RID: 10289
	private MaterialInstance.FloatProperty glowProp;

	// Token: 0x04002832 RID: 10290
	private MaterialInstance.FloatProperty opacityProp;

	// Token: 0x04002833 RID: 10291
	private float timer;

	// Token: 0x02000323 RID: 803
	private enum State
	{
		// Token: 0x04002835 RID: 10293
		None,
		// Token: 0x04002836 RID: 10294
		Igniting,
		// Token: 0x04002837 RID: 10295
		Extinguishing
	}
}
