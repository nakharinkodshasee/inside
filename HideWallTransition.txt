using System;
using UnityEngine;

// Token: 0x02000167 RID: 359
public class HideWallTransition : MonoBehaviour
{
	// Token: 0x06000A96 RID: 2710 RVA: 0x0006780C File Offset: 0x00065A0C
	private void Start()
	{
		this.distBetweenCamPoints = this.camRightPos.position.x - this.camLeftPos.position.x;
		if (this.hideTransitionObject == null)
		{
			base.enabled = false;
			return;
		}
		Vector3 position = this.hideTransitionObject.position;
		position.x = this.rightPos.position.x;
		this.hideTransitionObject.position = position;
	}

	// Token: 0x06000A97 RID: 2711 RVA: 0x00067894 File Offset: 0x00065A94
	private void Update()
	{
		if (Camera.main.transform.position.x > this.camLeftPos.position.x && Camera.main.transform.position.x < this.camRightPos.position.x)
		{
			float num = this.camRightPos.position.x - Camera.main.transform.position.x;
			float num2 = Mathf.InverseLerp(0f, this.distBetweenCamPoints, num);
			Vector3 position = Vector3.Lerp(this.leftPos.position, this.rightPos.position, num2);
			this.hideTransitionObject.transform.position = position;
		}
	}

	// Token: 0x0400123F RID: 4671
	public Transform hideTransitionObject;

	// Token: 0x04001240 RID: 4672
	public Transform rightPos;

	// Token: 0x04001241 RID: 4673
	public Transform leftPos;

	// Token: 0x04001242 RID: 4674
	public Transform camRightPos;

	// Token: 0x04001243 RID: 4675
	public Transform camLeftPos;

	// Token: 0x04001244 RID: 4676
	private float distBetweenCamPoints;
}