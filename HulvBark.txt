using System;
using UnityEngine;

// Token: 0x020000AB RID: 171
public class HulvBark : MonoBehaviour, IPreAwake
{
	// Token: 0x060005A2 RID: 1442 RVA: 0x000437E8 File Offset: 0x000419E8
	public bool PreAwake(int callcount)
	{
		SignalIn.Create("startBark", base.gameObject, new Action(this.DoStartBark));
		return true;
	}

	// Token: 0x060005A3 RID: 1443 RVA: 0x00043808 File Offset: 0x00041A08
	private void DoStartBark()
	{
		if (!this.isBarking && this.numberOfBarks > 0)
		{
			if (this.onlyRunOnce && !this.hasBarked)
			{
				this.isBarking = true;
				this.waitTime = 0f;
				this.hasBarked = true;
			}
			else if (!this.onlyRunOnce)
			{
				this.isBarking = true;
				this.waitTime = 0f;
			}
		}
	}

	// Token: 0x060005A4 RID: 1444 RVA: 0x00043880 File Offset: 0x00041A80
	private void FixedUpdate()
	{
		if (this.isBarking)
		{
			this.timer += Time.deltaTime;
			if (this.timer >= this.waitTime)
			{
				this.hulvPlayer.Bark();
				this.barkCount++;
				this.waitTime = Random.Range(this.minDelay, this.maxDelay);
				this.timer = 0f;
				if (this.barkCount >= this.numberOfBarks)
				{
					this.isBarking = false;
				}
			}
		}
	}

	// Token: 0x040009CD RID: 2509
	public HulvPlayer hulvPlayer;

	// Token: 0x040009CE RID: 2510
	public int numberOfBarks = 3;

	// Token: 0x040009CF RID: 2511
	public float minDelay = 0.05f;

	// Token: 0x040009D0 RID: 2512
	public float maxDelay = 0.2f;

	// Token: 0x040009D1 RID: 2513
	public bool onlyRunOnce = true;

	// Token: 0x040009D2 RID: 2514
	private float waitTime = 1f;

	// Token: 0x040009D3 RID: 2515
	private float timer;

	// Token: 0x040009D4 RID: 2516
	private SignalIn startBark;

	// Token: 0x040009D5 RID: 2517
	private int barkCount;

	// Token: 0x040009D6 RID: 2518
	private bool isBarking;

	// Token: 0x040009D7 RID: 2519
	private bool hasBarked;
}
