using System;
using System.Collections.Generic;
using UnityEngine;

// Token: 0x02000191 RID: 401
public class ContinuousTracks : MonoBehaviour
{
	// Token: 0x06000BB1 RID: 2993 RVA: 0x00072FC8 File Offset: 0x000711C8
	private void Start()
	{
	}

	// Token: 0x06000BB2 RID: 2994 RVA: 0x00072FCC File Offset: 0x000711CC
	private void OnCollisionStay(Collision coll)
	{
		foreach (ContactPoint item in coll.contacts)
		{
			if (Vector3.Dot(item.normal, Vector3.up) > 0.5f)
			{
				this.groundContacts.Add(item);
			}
		}
	}

	// Token: 0x06000BB3 RID: 2995 RVA: 0x00073028 File Offset: 0x00071228
	public void StopTracks()
	{
		this.activated = false;
	}

	// Token: 0x06000BB4 RID: 2996 RVA: 0x00073034 File Offset: 0x00071234
	public void StartTracks()
	{
		this.activated = true;
	}

	// Token: 0x06000BB5 RID: 2997 RVA: 0x00073040 File Offset: 0x00071240
	private void OnGround()
	{
		this.onGround = true;
	}

	// Token: 0x06000BB6 RID: 2998 RVA: 0x0007304C File Offset: 0x0007124C
	private void OffGround()
	{
		this.onGround = false;
	}

	// Token: 0x06000BB7 RID: 2999 RVA: 0x00073058 File Offset: 0x00071258
	private void FixedUpdate()
	{
		if (!this.activated)
		{
			return;
		}
		Vector3 right = Vector3.right;
		if (this.onGround && this.groundContacts.Count > 0)
		{
			float x = base.GetComponent<Collider>().attachedRigidbody.velocity.x;
			float num = this.surfaceVelocity - base.GetComponent<Collider>().attachedRigidbody.velocity.x;
			Vector3 vector = Vector3.right;
			vector = vector * num * this.friction;
			base.GetComponent<Collider>().attachedRigidbody.AddForceAtPosition(vector, base.transform.position, 2);
		}
		this.groundContacts.Clear();
	}

	// Token: 0x06000BB8 RID: 3000 RVA: 0x00073110 File Offset: 0x00071310
	private void Update()
	{
		if (!this.activated)
		{
			return;
		}
		if (this.tracks.GetComponent<Renderer>())
		{
			float x = this.tracks.GetComponent<Renderer>().material.GetTextureScale("_MainTex").x;
			float x2 = this.tracks.transform.lossyScale.x;
			this.offset += this.surfaceVelocity / x2 * x * Time.deltaTime;
			this.tracks.GetComponent<Renderer>().material.SetTextureOffset("_MainTex", new Vector2(this.offset, 0f));
		}
	}

	// Token: 0x0400145D RID: 5213
	public GameObject tracks;

	// Token: 0x0400145E RID: 5214
	public float surfaceVelocity = 3f;

	// Token: 0x0400145F RID: 5215
	public float friction = 0.25f;

	// Token: 0x04001460 RID: 5216
	private bool activated = true;

	// Token: 0x04001461 RID: 5217
	private float offset;

	// Token: 0x04001462 RID: 5218
	private List<ContactPoint> groundContacts = new List<ContactPoint>();

	// Token: 0x04001463 RID: 5219
	private bool onGround;
}